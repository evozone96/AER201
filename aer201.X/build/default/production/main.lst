MPASM 5.65                          MAIN.ASM   2-29-2016  13:28:13         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; ********************************************************************************
                      00002 ; Barrel Inspection Machine
                      00003 ; Ming Kun Yang (1001262224)
                      00004 ; ********************************************************************************
                      00005 
                      00006 
                      00007 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00008     list P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00009 
                      00010 ; ********************************************************************************
                      00011 ; Configuration bits
                      00012 ; ********************************************************************************
                      00013 
                      00014     config OSC  = HS, FCMEN = OFF, IESO = OFF
                      00015     config PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00016     config WDT  = OFF, WDTPS = 32768
                      00017     config MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF, CCP2MX = PORTC
                      00018     config STVREN = ON, LVP = OFF, XINST = OFF
                      00019     config DEBUG = OFF
                      00020     config CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF, CPB = OFF, CPD = OFF
                      00021     config WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00022     config WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00023     config EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF, EBTRB = OFF
                      00024     
                      00025 ; ********************************************************************************
                      00026 ; Definitions
                      00027 ; ********************************************************************************
                      00028 #define LCD_RS      LATB, 2     
                      00029 #define LCD_E       LATB, 3
                      00030     
                      00031 ; PORTA 0-1 are ports for motor on/off (output)
                      00032 
                      00033 ; PORTB 0-1 are ports for motor directions (output)
                      00034 ; PORTB 2-7 are ports for LCD output 
                      00035 ; PORTC 0 is for LED lighting up when barrel detected
                      00036 ; PORTC 1 is for arm distance optical encoder
                      00037 ; PORTC 2 to select barrel input
                      00038 ; PORTC 3-4 ports are for I2C
                      00039 ; PORTC 5 port for distance optical encoder
                      00040 ; PORTC 6-7 ports are for EUART
                      00041 ; PORTD 0-3 are ports for push button input 
                      00042 ; PORTD 4-7 are ports for barrel water level input
                      00043 ; PORTE 0 port for obstacle IR input
                      00044 ; PORTE 1 port for barrel IR input
                      00045 ; PORTE 2 port for tall/short barrel identification
                      00046 ; 
                      00047 
                      00048 
                      00049 ; ********************************************************************************
                      00050 ; General Purpose Register Assignments
                      00051 ; ********************************************************************************
                      00052 
  00000020            00053 Temp0                       equ 0x20;
  00000021            00054 Temp1                       equ 0x21;
  00000022            00055 Temp2                       equ 0x22;
  00000023            00056 Temp3                       equ 0x23;
  00000024            00057 Temp4                       equ 0x24;
                      00058 
  00000025            00059 DelayCounter0               equ 0x25;
  00000026            00060 DelayCounter1               equ 0x26;
  00000027            00061 DelayCounter2               equ 0x27;
  00000028            00062 DelayCounter3               equ 0x28;
  00000029            00063 DelayCounter4               equ 0x29;
  0000002A            00064 DelayCounter5               equ 0x2A;
MPASM 5.65                          MAIN.ASM   2-29-2016  13:28:13         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000002B            00065 DelayCounter6               equ 0x2B;
  0000002C            00066 DelayCounter7               equ 0x2C;
  0000002D            00067 DelayCounter8               equ 0x2D;
  0000002E            00068 DelayCounter9               equ 0x2E;
  0000002F            00069 DelayCounter10              equ 0x2F;
                      00070                     
                      00071                      
  00000030            00072 MenuLocation                equ 0x30;
  00000031            00073 OperatingMode               equ 0x31;
  00000032            00074 CurrButtonState             equ 0x32;
  00000033            00075 PrevButtonState             equ 0x33;   
  00000034            00076 ButtonPushed                equ 0x34;
  00000035            00077 LinePositionTracker         equ 0x35;
  00000036            00078 CurrSenState1               equ 0x36;
  00000037            00079 PrevSenState1               equ 0x37;
  00000038            00080 CurrSenState2               equ 0x38;
  00000039            00081 PrevSenState2               equ 0x39;
  0000003A            00082 LineStartTracker            equ 0x3A;
  0000003B            00083 CurrOpState                 equ 0x3B;
  0000003C            00084 PrevOpState                 equ 0x3C;
                      00085 
  00000040            00086 BarrelHeightOne             equ 0x40;
  00000041            00087 BarrelHeightTwo             equ 0x41;
  00000042            00088 BarrelHeightThree           equ 0x42;
  00000043            00089 BarrelHeightFour            equ 0x43;
  00000044            00090 BarrelHeightFive            equ 0x44;
  00000045            00091 BarrelHeightSix             equ 0x45;
  00000046            00092 BarrelHeightSeven           equ 0x46;
                      00093             
  00000047            00094 WaterHeightOne              equ 0x47;
  00000048            00095 WaterHeightTwo              equ 0x48;
  00000049            00096 WaterHeightThree            equ 0x49;
  0000004A            00097 WaterHeightFour             equ 0x4A;
  0000004B            00098 WaterHeightFive             equ 0x4B;
  0000004C            00099 WaterHeightSix              equ 0x4C;
  0000004D            00100 WaterHeightSeven            equ 0x4D;
                      00101             
  00000050            00102 NumReg                      equ 0x50;
  00000051            00103 NumReg256                   equ 0x51;
  00000052            00104 NumBarrels                  equ 0x52;
  00000053            00105 BarrelNumber                equ 0x53;
  00000054            00106 CurrDistance                equ 0x54;
                      00107                     
  00000060            00108 BarrelDistance256           equ 0x60;
  00000061            00109 BarrelDistanceOne           equ 0x61;
  00000062            00110 BarrelDistanceTwo           equ 0x62;
  00000063            00111 BarrelDistanceThree         equ 0x63;
  00000064            00112 BarrelDistanceFour          equ 0x64;
  00000065            00113 BarrelDistanceFive          equ 0x65;
  00000066            00114 BarrelDistanceSix           equ 0x66;
  00000067            00115 BarrelDistanceSeven         equ 0x67;
  00000068            00116 BCDRegOne                   equ 0x68;
  00000069            00117 BCDRegTwo                   equ 0x69;
  0000006A            00118 BCDRegThree                 equ 0x6A;               
                      00119 
                      00120 ; ********************************************************************************
                      00121 ; Macros
                      00122 ; ********************************************************************************
                      00123 
                      00124 
                      00125 ifequalf  macro  Var, Value, Label      ; if Label ends with return instruction
                      00126     movlw   Value
                      00127     subwf   Var, 0                      ; check if Var-Value=0
                      00128     btfsc   STATUS, 2
                      00129     call    Label
                      00130     endm
                      00131     
                      00132 ifequalb  macro  Var, Value, Label      ; if Label ends with branch instruction
                      00133     movlw   Value
                      00134     subwf   Var, 0                      ; check if Var-Value=0
                      00135     btfsc   STATUS, 2
                      00136     goto    Label
                      00137     endm
                      00138 
MPASM 5.65                          MAIN.ASM   2-29-2016  13:28:13         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00139 ifnequalf macro  Var, Value, Label      ; if Label ends with return instruction
                      00140     movlw   Value
                      00141     subwf   Var, 0                      ; check if Var-Value!=0
                      00142     btfss   STATUS, 2
                      00143     call    Label
                      00144     endm
                      00145 
                      00146 ifnequalb macro  Var, Value, Label      ; if Label ends with branch instruction
                      00147     movlw   Value
                      00148     subwf   Var, 0                      ; check if Var-Value!=0
                      00149     btfss   STATUS, 2
                      00150     goto    Label
                      00151     endm
                      00152     
                      00153 store macro Destination, Value
                      00154     movlw   Value
                      00155     movwf   Destination
                      00156     endm
                      00157     
                      00158 printline macro  TableName, LineNumber
                      00159     movlw   LineNumber                 
                      00160     call    WriteInstToLCD              
                      00161     movlw   upper TableName             
                      00162     movwf   TBLPTRU
                      00163     movlw   high TableName
                      00164     movwf   TBLPTRH
                      00165     movlw   low TableName
                      00166     movwf   TBLPTRL
                      00167     ; Do 16 Loops to display all 16 characters in the TableName
                      00168     call    Write16DataToLCD
                      00169     endm
                      00170 
                      00171 printch  macro Char, PositionReg, LineNumber 
                      00172     movf    PositionReg, w       
                      00173     iorlw   LineNumber
                      00174     call    WriteInstToLCD
                      00175     movlw   Char
                      00176     call    WriteDataToLCD
                      00177     endm
                      00178     
                      00179 printnum macro NumReg, PositionReg, LineNumber 
                      00180     movf    PositionReg, w       
                      00181     iorlw   LineNumber 
                      00182     call    WriteInstToLCD
                      00183     movf    NumReg, w
                      00184     addlw   B'110000'
                      00185     call    WriteDataToLCD
                      00186     endm
                      00187 ; ********************************************************************************
                      00188 ; Vector Table
                      00189 ; ********************************************************************************
                      00190 
                      00191     org     0x0000                  ; Reset vector
000000 EF?? F???      00192     goto    Main
                      00193     org     0x0008                  ; When Low Priority Interrupt occurs
000008 EF?? F???      00194     goto    Interrupt
                      00195     org     0x0018                  ; When High Priority Interrupt occurs    
000018 0010           00196     retfie
                      00197     
                      00198 ; ********************************************************************************
                      00199 ; Tables
                      00200 ; ********************************************************************************
                      00201     
00001A 2020 2020 5320 00202 TableMenuTitle0             db  "     START     >", 0
       4154 5452 2020 
       2020 3E20 0000 
00002C 203C 2020 4144 00203 TableMenuTitle1             db  "<   DATA LOG   >", 0
       4154 4C20 474F 
       2020 3E20 0000 
00003E 203C 4552 4553 00204 TableMenuTitle2             db  "< RESET MEMORY >", 0
       2054 454D 4F4D 
       5952 3E20 0000 
000050 203C 4553 2054 00205 TableMenuTitle3             db  "< SET DATE/TIME ", 0
       4144 4554 542F 
MPASM 5.65                          MAIN.ASM   2-29-2016  13:28:13         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       4D49 2045 0000 
                      00206 
000062 4E49 5053 4345 00207 TableMenuTitle00            db  "INSPECTING.     ", 0
       4954 474E 202E 
       2020 2020 0000 
000074 4E49 5053 4345 00208 TableMenuTitle01            db  "INSPECTING..    ", 0
       4954 474E 2E2E 
       2020 2020 0000 
000086 4E49 5053 4345 00209 TableMenuTitle02            db  "INSPECTING...   ", 0
       4954 474E 2E2E 
       202E 2020 0000 
000098 4E49 5053 4345 00210 TableMenuTitle03            db  "INSPECTING....  ", 0
       4954 474E 2E2E 
       2E2E 2020 0000 
0000AA 4E49 5053 4345 00211 TableMenuTitle04            db  "INSPECTING..... ", 0
       4954 474E 2E2E 
       2E2E 202E 0000 
0000BC 4E49 5053 4345 00212 TableMenuTitle05            db  "INSPECTING......", 0
       4954 474E 2E2E 
       2E2E 2E2E 0000 
0000CE 2D2D 2D2D 4F43 00213 TableMenuTitle06            db  "----COMPLETE----", 0
       504D 454C 4554 
       2D2D 2D2D 0000 
0000E0 2020 5320 5641 00214 TableMenuTitle07            db  "   SAVE DATA   >", 0
       2045 4144 4154 
       2020 3E20 0000 
0000F2 493C 534E 4550 00215 TableMenuTitle08            db  "<INSPECT AGAIN  ", 0
       5443 4120 4147 
       4E49 2020 0000 
                      00216 
000104 2020 2020 4420 00217 TableMenuTitle10            db  "     DATA #1   >", 0
       5441 2041 3123 
       2020 3E20 0000 
000116 203C 2020 4420 00218 TableMenuTitle11            db  "<    DATA #2   >", 0
       5441 2041 3223 
       2020 3E20 0000 
000128 203C 2020 4420 00219 TableMenuTitle12            db  "<    DATA #3    ", 0
       5441 2041 3323 
       2020 2020 0000 
                      00220             
00013A 4120 4552 5920 00221 TableMenuTitle20            db  " ARE YOU SURE?  ", 0
       554F 5320 5255 
       3F45 2020 0000 
                      00222 
00014C 554E 204D 4142 00223 TableMenuTitle100           db  "NUM BARRELS     ", 0
       5252 4C45 2053 
       2020 2020 0000 
00015E 4142 5252 4C45 00224 TableMenuTitle101           db  "BARREL DISTANCE ", 0
       4420 5349 4154 
       434E 2045 0000 
000170 4142 5252 4C45 00225 TableMenuTitle102           db  "BARREL HEIGHT   ", 0
       4820 4945 4847 
       2054 2020 0000 
000182 4157 4554 2052 00226 TableMenuTitle103           db  "WATER LEVEL     ", 0
       454C 4556 204C 
       2020 2020 0000 
                      00227     
                      00228 ; ********************************************************************************
                      00229 ; Executable Code 
                      00230 ; ********************************************************************************
                      00231     
000194                00232 Main
                      00233     ; initialization
000194 6A92           00234     clrf        TRISA                   ; sets all ports as output
000196 6A93           00235     clrf        TRISB
000198 6A94           00236     clrf        TRISC
00019A 6A95           00237     clrf        TRISD
00019C 6A96           00238     clrf        TRISE
                      00239     
00019E 6A80           00240     clrf        PORTA
0001A0 6A81           00241     clrf        PORTB
0001A2 6A82           00242     clrf        PORTC
0001A4 6A83           00243     clrf        PORTD
0001A6 6A84           00244     clrf        PORTE
MPASM 5.65                          MAIN.ASM   2-29-2016  13:28:13         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00245     
0001A8 8A94           00246     bsf         TRISC, 5
                      00247     store       TRISD, B'11111111'
0001AA 0EFF               M     movlw   B'11111111'
0001AC 6E95               M     movwf   TRISD
0001AE 8096           00248     bsf         TRISE, 0
0001B0 8296           00249     bsf         TRISE, 1
0001B2 8496           00250     bsf         TRISE, 2
                      00251     
                      00252     
                      00253     ; EEPROM initialization $%^&$%^&
                      00254     
                      00255     
                      00256     
0001B4 6A25           00257     clrf        DelayCounter0
0001B6 6A26           00258     clrf        DelayCounter1
0001B8 6A27           00259     clrf        DelayCounter2
0001BA 6A28           00260     clrf        DelayCounter3
0001BC 6A29           00261     clrf        DelayCounter4
0001BE 6A2A           00262     clrf        DelayCounter5
0001C0 6A2B           00263     clrf        DelayCounter6
0001C2 6A2C           00264     clrf        DelayCounter7
0001C4 6A2D           00265     clrf        DelayCounter8
0001C6 6A2E           00266     clrf        DelayCounter9
0001C8 6A2F           00267     clrf        DelayCounter10
0001CA 6A31           00268     clrf        OperatingMode
                      00269     
0001CC EC?? F???      00270     call        InitializeLCD
                      00271     store       MenuLocation, B'11111100'
0001D0 0EFC               M     movlw   B'11111100'
0001D2 6E30               M     movwf   MenuLocation
0001D4 EC?? F???      00272     call        UpdateDisplay
Warning[207]: Found label after column 1. (MainLoop)
0001D8                00273     MainLoop
                      00274         ; polls sensors values
0001D8 CF82 F03B      00275         movff   PORTC, CurrOpState
0001DC CF83 F036      00276         movff   PORTD, CurrSenState1
0001E0 CF84 F038      00277         movff   PORTE, CurrSenState2
                      00278         
                      00279         
                      00280         ifequalf        OperatingMode, B'1', ScrollDisplay
0001E4 0E01               M     movlw   B'1'
0001E6 5C31               M     subwf   OperatingMode, 0            ; check if Var-Value=0
0001E8 B4D8               M     btfsc   STATUS, 2
0001EA EC?? F???          M     call    ScrollDisplay
                      00281         ifequalf        OperatingMode, B'10', Forward
0001EE 0E02               M     movlw   B'10'
0001F0 5C31               M     subwf   OperatingMode, 0            ; check if Var-Value=0
0001F2 B4D8               M     btfsc   STATUS, 2
0001F4 EC?? F???          M     call    Forward
                      00282         ifequalf        OperatingMode, B'100', Shrink
0001F8 0E04               M     movlw   B'100'
0001FA 5C31               M     subwf   OperatingMode, 0            ; check if Var-Value=0
0001FC B4D8               M     btfsc   STATUS, 2
0001FE EC?? F???          M     call    Shrink
                      00283         ifequalf        OperatingMode, B'1000', ForwardSE
000202 0E08               M     movlw   B'1000'
000204 5C31               M     subwf   OperatingMode, 0            ; check if Var-Value=0
000206 B4D8               M     btfsc   STATUS, 2
000208 EC?? F???          M     call    ForwardSE
                      00284         ifequalf        OperatingMode, B'10000', Extend
00020C 0E10               M     movlw   B'10000'
00020E 5C31               M     subwf   OperatingMode, 0            ; check if Var-Value=0
000210 B4D8               M     btfsc   STATUS, 2
000212 EC?? F???          M     call    Extend
                      00285         
                      00286         ; polls push buttons
000216 C036 F032      00287         movff   CurrSenState1, CurrButtonState
00021A B432           00288         btfsc   CurrButtonState, 2
00021C EC?? F???      00289         call    SelectedPushed
000220 B032           00290         btfsc   CurrButtonState, 0
000222 EC?? F???      00291         call    LeftPushed
000226 B232           00292         btfsc   CurrButtonState, 1
000228 EC?? F???      00293         call    RightPushed  
MPASM 5.65                          MAIN.ASM   2-29-2016  13:28:13         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00022C B632           00294         btfsc   CurrButtonState, 3
00022E EC?? F???      00295         call    QuitPushed
000232 B034           00296         btfsc   ButtonPushed, 0 
000234 EC?? F???      00297         call    UpdateDisplay
000238 9034           00298         bcf     ButtonPushed, 0
                      00299         
00023A C03B F03C      00300         movff   CurrOpState, PrevOpState
00023E C036 F037      00301         movff   CurrSenState1, PrevSenState1
000242 C038 F039      00302         movff   CurrSenState2, PrevSenState2
000246 C032 F033      00303         movff   CurrButtonState, PrevButtonState
00024A D???           00304         bra     MainLoop
                      00305         
                      00306 ; ScrollDisplay: updates the position tracker if a line longer than 16 
                      00307 ; characters is displayed for data
                      00308 ; Input: LinePositionTracker
00024C                00309 ScrollDisplay
00024C 2A28           00310     incf        DelayCounter3
00024E 0EFF           00311     movlw       B'11111111'
000250 5C28           00312     subwf       DelayCounter3, W
000252 A4D8           00313     btfss       STATUS, 2
000254 0012           00314     return
000256 6A28           00315     clrf        DelayCounter3
000258 2A2C           00316     incf        DelayCounter7
00025A 0EFF           00317     movlw       B'11111111'
00025C 5C2C           00318     subwf       DelayCounter7, W
00025E A4D8           00319     btfss       STATUS, 2
000260 0012           00320     return
000262 6A2C           00321     clrf        DelayCounter7
000264 2A2D           00322     incf        DelayCounter8
000266 0E04           00323     movlw       B'100'
000268 5C2D           00324     subwf       DelayCounter8, W
00026A A4D8           00325     btfss       STATUS, 2
00026C 0012           00326     return  
00026E 6A2D           00327     clrf        DelayCounter8
000270 0E11           00328     movlw       B'10001'
000272 5C35           00329     subwf       LinePositionTracker, W
000274 B8D8           00330     btfsc       STATUS, 4
000276 EC?? F???      00331     call        ResetLine
00027A 063A           00332     decf        LineStartTracker
00027C 0012           00333     return
                      00334     
00027E                00335 ResetLine
00027E 0E01           00336     movlw       B'1'
000280 6E3A           00337     movwf       LineStartTracker
000282 0012           00338     return
                      00339 
                      00340         
                      00341 ; Forward: Moves forward for a fixed amount of time, at a fixed speed, polls 
                      00342 ; sensors and logs distance travelled and barrel data.
                      00343 ; Input: DelayCounter2              Output: OperatingMode
000284                00344 Forward
000284 9289           00345     bcf         LATA, 1
000286 0EF1           00346     movlw       B'11110001'             ; needs testing
000288 5C27           00347     subwf       DelayCounter2, W                      
00028A B4D8           00348     btfsc       STATUS, 2
00028C D???           00349     bra         StopMotor
00028E 0E3C           00350     movlw       B'111100'                            
000290 5C27           00351     subwf       DelayCounter2, W
000292 B4D8           00352     btfsc       STATUS, 2
000294 D???           00353     bra         StartMotor
000296 D???           00354     bra         Continue
                      00355     
000298                00356 StartMotor
000298 8089           00357     bsf         LATA, 0
00029A 808A           00358     bsf         LATB, 0                     ; may be bcf
00029C D???           00359     bra         Continue
                      00360     
00029E                00361 StopMotor
00029E 808B           00362     bsf         LATC, 0
0002A0 0E00           00363     movlw       B'0'                ; Start:Stop = 4:1
0002A2 6E27           00364     movwf       DelayCounter2
0002A4 9089           00365     bcf         LATA, 0
0002A6 D???           00366     bra         Continue
                      00367     
MPASM 5.65                          MAIN.ASM   2-29-2016  13:28:13         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002A8                00368 Continue        
0002A8 2A27           00369     incf        DelayCounter2
0002AA D???           00370     bra         PollObsta
                      00371     
0002AC                00372 PollObsta
0002AC A084           00373     btfss       PORTE, 0
0002AE D???           00374     bra         PollBarrel
                      00375     
                      00376     store       OperatingMode, B'100'
0002B0 0E04               M     movlw   B'100'
0002B2 6E31               M     movwf   OperatingMode
0002B4 D???           00377     bra         AddLog
                      00378     
0002B6                00379 PollBarrel
0002B6 A238           00380     btfss       CurrSenState2, 1
0002B8 D???           00381     bra         AddLog
0002BA B239           00382     btfsc       PrevSenState2, 1
0002BC D???           00383     bra         AddLog
                      00384     
0002BE C054 FFEE      00385     movff       CurrDistance, POSTINC0
0002C2 A484           00386     btfss       PORTE, 2
0002C4 D???           00387     bra         TallBarrel
0002C6 D???           00388     bra         ShortBarrel
                      00389     
0002C8                00390 TallBarrel
0002C8 80E6           00391     bsf         POSTINC1, 0
0002CA 848B           00392     bsf         LATC, 2
0002CC D???           00393     bra         Read
                      00394     
0002CE                00395 ShortBarrel
0002CE 90E6           00396     bcf         POSTINC1, 0
0002D0 948B           00397     bcf         LATC, 2
0002D2 D???           00398     bra         Read
                      00399     
0002D4                00400 Read
0002D4 A836           00401     btfss       CurrSenState1, 4
0002D6 D???           00402     bra         Empty
0002D8 AA36           00403     btfss       CurrSenState1, 5
0002DA D???           00404     bra         Half
0002DC D???           00405     bra         Full
0002DE AC36           00406     btfss       CurrSenState1, 6
0002E0 D???           00407     bra         Empty
0002E2 AE36           00408     btfss       CurrSenState1, 7
0002E4 D???           00409     bra         Half
0002E6 D???           00410     bra         Full
                      00411 
0002E8                00412 Empty
0002E8 80DE           00413     bsf         POSTINC2, 0
0002EA D???           00414     bra         AddLog
                      00415     
0002EC                00416 Half
0002EC 82DE           00417     bsf         POSTINC2, 1
0002EE D???           00418     bra         AddLog
                      00419     
0002F0                00420 Full
0002F0 84DE           00421     bsf         POSTINC2, 2
0002F2 D???           00422     bra         AddLog
                      00423     
0002F4                00424 AddLog
0002F4 EC?? F???      00425     call        InspectingDelay
0002F8 AA3B           00426     btfss       CurrOpState, 5
0002FA 0012           00427     return
0002FC BA3C           00428     btfsc       PrevOpState, 5
0002FE 0012           00429     return
000300 2A54           00430     incf        CurrDistance
                      00431     
000302 0012           00432     return
                      00433     
000304                00434 Shrink
000304 9089           00435     bcf         LATA, 0
000306 8289           00436     bsf         LATA, 1
000308 828A           00437     bsf         LATB, 1
00030A A23B           00438     btfss       CurrOpState, 1
00030C D???           00439     bra         AddLog
MPASM 5.65                          MAIN.ASM   2-29-2016  13:28:13         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00030E B23C           00440     btfsc       PrevOpState, 1
000310 D???           00441     bra         AddLog
                      00442     ; add to armdistance counter
                      00443     store       OperatingMode, B'1000'
000312 0E08               M     movlw   B'1000'
000314 6E31               M     movwf   OperatingMode
000316 D???           00444     bra         AddLog
                      00445     
000318                00446 Extend
000318 9089           00447     bcf         LATA, 0
00031A 8289           00448     bsf         LATA, 1
00031C 928A           00449     bcf         LATB, 1
00031E A23B           00450     btfss       CurrOpState, 1
000320 D???           00451     bra         AddLog
000322 B23C           00452     btfsc       PrevOpState, 1
000324 D???           00453     bra         AddLog
                      00454     ; add to armdistance counter
                      00455     store       OperatingMode, B'10'
000326 0E02               M     movlw   B'10'
000328 6E31               M     movwf   OperatingMode
00032A D???           00456     bra         AddLog
                      00457     
00032C                00458 ForwardSE
00032C 8089           00459     bsf         LATA, 0
00032E 808A           00460     bsf         LATB, 0
000330 9289           00461     bcf         LATA, 1
000332 D???           00462     bra         AddLog
                      00463     
000334                00464 Backward
000334 8089           00465     bsf         LATA, 0
000336 908A           00466     bcf         LATB, 0
000338 9289           00467     bcf         LATA, 1
00033A EC?? F???      00468     call        InspectingDelay
                      00469     
00033E 0012           00470     return
                      00471     
                      00472     
                      00473 ; UpdateDisplay: Updates display when user of the machine has changed modes
                      00474 ; Input: MenuLocation               Output: None
000340                00475 UpdateDisplay 
                      00476     
000340 EC?? F???      00477     call ClearLCD
                      00478     
                      00479     ifequalf    MenuLocation, B'11111100', TopMenu0
000344 0EFC               M     movlw   B'11111100'
000346 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000348 B4D8               M     btfsc   STATUS, 2
00034A EC?? F???          M     call    TopMenu0
                      00480     ifequalf    MenuLocation, B'11111101', TopMenu1
00034E 0EFD               M     movlw   B'11111101'
000350 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000352 B4D8               M     btfsc   STATUS, 2
000354 EC?? F???          M     call    TopMenu1
                      00481     ifequalf    MenuLocation, B'11111110', TopMenu2
000358 0EFE               M     movlw   B'11111110'
00035A 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
00035C B4D8               M     btfsc   STATUS, 2
00035E EC?? F???          M     call    TopMenu2
                      00482     ifequalf    MenuLocation, B'11111111', TopMenu3
000362 0EFF               M     movlw   B'11111111'
000364 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000366 B4D8               M     btfsc   STATUS, 2
000368 EC?? F???          M     call    TopMenu3
                      00483     ifequalf    MenuLocation, B'11000000', SubMenu00
00036C 0EC0               M     movlw   B'11000000'
00036E 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000370 B4D8               M     btfsc   STATUS, 2
000372 EC?? F???          M     call    SubMenu00
                      00484     ifequalf    MenuLocation, B'11000001', SubMenu01
000376 0EC1               M     movlw   B'11000001'
000378 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
00037A B4D8               M     btfsc   STATUS, 2
00037C EC?? F???          M     call    SubMenu01
                      00485     ifequalf    MenuLocation, B'11000010', SubMenu02
MPASM 5.65                          MAIN.ASM   2-29-2016  13:28:13         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000380 0EC2               M     movlw   B'11000010'
000382 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000384 B4D8               M     btfsc   STATUS, 2
000386 EC?? F???          M     call    SubMenu02
                      00486     ifequalf    MenuLocation, B'11000011', SubMenu03
00038A 0EC3               M     movlw   B'11000011'
00038C 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
00038E B4D8               M     btfsc   STATUS, 2
000390 EC?? F???          M     call    SubMenu03
                      00487     ifequalf    MenuLocation, B'11000100', SubMenu04
000394 0EC4               M     movlw   B'11000100'
000396 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000398 B4D8               M     btfsc   STATUS, 2
00039A EC?? F???          M     call    SubMenu04
                      00488     ifequalf    MenuLocation, B'11000101', SubMenu05
00039E 0EC5               M     movlw   B'11000101'
0003A0 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0003A2 B4D8               M     btfsc   STATUS, 2
0003A4 EC?? F???          M     call    SubMenu05
                      00489     ifequalf    MenuLocation, B'11000110', SubMenu06
0003A8 0EC6               M     movlw   B'11000110'
0003AA 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0003AC B4D8               M     btfsc   STATUS, 2
0003AE EC?? F???          M     call    SubMenu06
                      00490     ifequalf    MenuLocation, B'11000111', SubMenu07 
0003B2 0EC7               M     movlw   B'11000111'
0003B4 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0003B6 B4D8               M     btfsc   STATUS, 2
0003B8 EC?? F???          M     call    SubMenu07
                      00491     ifequalf    MenuLocation, B'11001000', SubMenu08 
0003BC 0EC8               M     movlw   B'11001000'
0003BE 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0003C0 B4D8               M     btfsc   STATUS, 2
0003C2 EC?? F???          M     call    SubMenu08
                      00492     ifequalf    MenuLocation, B'11010000', SubMenu10
0003C6 0ED0               M     movlw   B'11010000'
0003C8 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0003CA B4D8               M     btfsc   STATUS, 2
0003CC EC?? F???          M     call    SubMenu10
                      00493     ifequalf    MenuLocation, B'11010001', SubMenu11
0003D0 0ED1               M     movlw   B'11010001'
0003D2 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0003D4 B4D8               M     btfsc   STATUS, 2
0003D6 EC?? F???          M     call    SubMenu11
                      00494     ifequalf    MenuLocation, B'11010010', SubMenu12
0003DA 0ED2               M     movlw   B'11010010'
0003DC 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0003DE B4D8               M     btfsc   STATUS, 2
0003E0 EC?? F???          M     call    SubMenu12
                      00495     ifequalf    MenuLocation, B'11100000', SubMenu20
0003E4 0EE0               M     movlw   B'11100000'
0003E6 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0003E8 B4D8               M     btfsc   STATUS, 2
0003EA EC?? F???          M     call    SubMenu20
                      00496     ifequalf    MenuLocation, B'11110000', SubMenu30
0003EE 0EF0               M     movlw   B'11110000'
0003F0 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0003F2 B4D8               M     btfsc   STATUS, 2
0003F4 EC?? F???          M     call    SubMenu30
                      00497     ifequalf    MenuLocation, B'01000000', SubMenu100
0003F8 0E40               M     movlw   B'01000000'
0003FA 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0003FC B4D8               M     btfsc   STATUS, 2
0003FE EC?? F???          M     call    SubMenu100
                      00498     ifequalf    MenuLocation, B'01000001', SubMenu101
000402 0E41               M     movlw   B'01000001'
000404 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000406 B4D8               M     btfsc   STATUS, 2
000408 EC?? F???          M     call    SubMenu101
                      00499     ifequalf    MenuLocation, B'01000010', SubMenu102
00040C 0E42               M     movlw   B'01000010'
00040E 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000410 B4D8               M     btfsc   STATUS, 2
000412 EC?? F???          M     call    SubMenu102
MPASM 5.65                          MAIN.ASM   2-29-2016  13:28:13         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00500     ifequalf    MenuLocation, B'01000011', SubMenu103
000416 0E43               M     movlw   B'01000011'
000418 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
00041A B4D8               M     btfsc   STATUS, 2
00041C EC?? F???          M     call    SubMenu103
                      00501     ifequalf    MenuLocation, B'01000100', SubMenu100
000420 0E44               M     movlw   B'01000100'
000422 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000424 B4D8               M     btfsc   STATUS, 2
000426 EC?? F???          M     call    SubMenu100
                      00502     ifequalf    MenuLocation, B'01000101', SubMenu101
00042A 0E45               M     movlw   B'01000101'
00042C 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
00042E B4D8               M     btfsc   STATUS, 2
000430 EC?? F???          M     call    SubMenu101
                      00503     ifequalf    MenuLocation, B'01000110', SubMenu102
000434 0E46               M     movlw   B'01000110'
000436 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000438 B4D8               M     btfsc   STATUS, 2
00043A EC?? F???          M     call    SubMenu102
                      00504     ifequalf    MenuLocation, B'01000111', SubMenu103
00043E 0E47               M     movlw   B'01000111'
000440 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000442 B4D8               M     btfsc   STATUS, 2
000444 EC?? F???          M     call    SubMenu103
                      00505     ifequalf    MenuLocation, B'01001000', SubMenu100
000448 0E48               M     movlw   B'01001000'
00044A 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
00044C B4D8               M     btfsc   STATUS, 2
00044E EC?? F???          M     call    SubMenu100
                      00506     ifequalf    MenuLocation, B'01001001', SubMenu101
000452 0E49               M     movlw   B'01001001'
000454 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000456 B4D8               M     btfsc   STATUS, 2
000458 EC?? F???          M     call    SubMenu101
                      00507     ifequalf    MenuLocation, B'01001010', SubMenu102
00045C 0E4A               M     movlw   B'01001010'
00045E 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000460 B4D8               M     btfsc   STATUS, 2
000462 EC?? F???          M     call    SubMenu102
                      00508     ifequalf    MenuLocation, B'01001011', SubMenu103
000466 0E4B               M     movlw   B'01001011'
000468 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
00046A B4D8               M     btfsc   STATUS, 2
00046C EC?? F???          M     call    SubMenu103
000470 0012           00509     return
                      00510     
000472                00511 TopMenu0 
                      00512     printline   TableMenuTitle0, B'11000000'
000472 0EC0               M     movlw   B'11000000'                
000474 EC?? F???          M     call    WriteInstToLCD              
000478 0E??               M     movlw   upper TableMenuTitle0       
00047A 6EF8               M     movwf   TBLPTRU
00047C 0E??               M     movlw   high TableMenuTitle0
00047E 6EF7               M     movwf   TBLPTRH
000480 0E??               M     movlw   low TableMenuTitle0
000482 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
000484 EC?? F???          M     call    Write16DataToLCD
000488 0012           00513     return
                      00514     
00048A                00515 TopMenu1 
                      00516     printline   TableMenuTitle1, B'10000000'
00048A 0E80               M     movlw   B'10000000'                
00048C EC?? F???          M     call    WriteInstToLCD              
000490 0E??               M     movlw   upper TableMenuTitle1       
000492 6EF8               M     movwf   TBLPTRU
000494 0E??               M     movlw   high TableMenuTitle1
000496 6EF7               M     movwf   TBLPTRH
000498 0E??               M     movlw   low TableMenuTitle1
00049A 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
00049C EC?? F???          M     call    Write16DataToLCD
0004A0 0012           00517     return
MPASM 5.65                          MAIN.ASM   2-29-2016  13:28:13         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00518     
0004A2                00519 TopMenu2 
                      00520     printline   TableMenuTitle2, B'10000000'
0004A2 0E80               M     movlw   B'10000000'                
0004A4 EC?? F???          M     call    WriteInstToLCD              
0004A8 0E??               M     movlw   upper TableMenuTitle2       
0004AA 6EF8               M     movwf   TBLPTRU
0004AC 0E??               M     movlw   high TableMenuTitle2
0004AE 6EF7               M     movwf   TBLPTRH
0004B0 0E??               M     movlw   low TableMenuTitle2
0004B2 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
0004B4 EC?? F???          M     call    Write16DataToLCD
0004B8 0012           00521     return
                      00522     
0004BA                00523 TopMenu3 
                      00524     printline   TableMenuTitle3, B'10000000'
0004BA 0E80               M     movlw   B'10000000'                
0004BC EC?? F???          M     call    WriteInstToLCD              
0004C0 0E??               M     movlw   upper TableMenuTitle3       
0004C2 6EF8               M     movwf   TBLPTRU
0004C4 0E??               M     movlw   high TableMenuTitle3
0004C6 6EF7               M     movwf   TBLPTRH
0004C8 0E??               M     movlw   low TableMenuTitle3
0004CA 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
0004CC EC?? F???          M     call    Write16DataToLCD
0004D0 0012           00525     return
                      00526     
0004D2                00527 InspectingDelay
                      00528     
                      00529     
0004D2 2A29           00530     incf        DelayCounter4
0004D4 0EFF           00531     movlw       B'11111111'
0004D6 5C29           00532     subwf       DelayCounter4, W
0004D8 A4D8           00533     btfss       STATUS, 2
0004DA 0012           00534     return
                      00535     
0004DC 6A29           00536     clrf        DelayCounter4
0004DE 2A2A           00537     incf        DelayCounter5
0004E0 0E3F           00538     movlw       B'111111'
0004E2 5C2A           00539     subwf       DelayCounter5, W
0004E4 A4D8           00540     btfss       STATUS, 2
0004E6 0012           00541     return
                      00542     
0004E8 6A2A           00543     clrf        DelayCounter5
0004EA 2A2B           00544     incf        DelayCounter6
0004EC 0E02           00545     movlw       B'10'
0004EE 5C2B           00546     subwf       DelayCounter6, W
0004F0 A4D8           00547     btfss       STATUS, 2
0004F2 0012           00548     return
                      00549     
0004F4 6A2B           00550     clrf        DelayCounter6
0004F6 0EC5           00551     movlw       B'11000101'
0004F8 5C30           00552     subwf       MenuLocation, W
0004FA B4D8           00553     btfsc       STATUS, 2
0004FC D???           00554     bra         ResetInspect
0004FE 2A30           00555     incf        MenuLocation
000500 EC?? F???      00556     call        UpdateDisplay
000504 0012           00557     return
                      00558     
000506                00559 ResetInspect
                      00560     store       MenuLocation, B'11000000'
000506 0EC0               M     movlw   B'11000000'
000508 6E30               M     movwf   MenuLocation
00050A EC?? F???      00561     call        UpdateDisplay
00050E 0012           00562     return
                      00563     
000510                00564 SubMenu00
                      00565     printline   TableMenuTitle00, B'10000000'
000510 0E80               M     movlw   B'10000000'                
000512 EC?? F???          M     call    WriteInstToLCD              
000516 0E??               M     movlw   upper TableMenuTitle00      
000518 6EF8               M     movwf   TBLPTRU
MPASM 5.65                          MAIN.ASM   2-29-2016  13:28:13         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00051A 0E??               M     movlw   high TableMenuTitle00
00051C 6EF7               M     movwf   TBLPTRH
00051E 0E??               M     movlw   low TableMenuTitle00
000520 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
000522 EC?? F???          M     call    Write16DataToLCD
000526 0012           00566     return
                      00567     
000528                00568 SubMenu01
                      00569     printline   TableMenuTitle01, B'10000000'
000528 0E80               M     movlw   B'10000000'                
00052A EC?? F???          M     call    WriteInstToLCD              
00052E 0E??               M     movlw   upper TableMenuTitle01      
000530 6EF8               M     movwf   TBLPTRU
000532 0E??               M     movlw   high TableMenuTitle01
000534 6EF7               M     movwf   TBLPTRH
000536 0E??               M     movlw   low TableMenuTitle01
000538 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
00053A EC?? F???          M     call    Write16DataToLCD
00053E 0012           00570     return
                      00571     
000540                00572 SubMenu02
                      00573     printline   TableMenuTitle02, B'10000000'
000540 0E80               M     movlw   B'10000000'                
000542 EC?? F???          M     call    WriteInstToLCD              
000546 0E??               M     movlw   upper TableMenuTitle02      
000548 6EF8               M     movwf   TBLPTRU
00054A 0E??               M     movlw   high TableMenuTitle02
00054C 6EF7               M     movwf   TBLPTRH
00054E 0E??               M     movlw   low TableMenuTitle02
000550 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
000552 EC?? F???          M     call    Write16DataToLCD
000556 0012           00574     return
                      00575     
000558                00576 SubMenu03
                      00577     printline   TableMenuTitle03, B'10000000'
000558 0E80               M     movlw   B'10000000'                
00055A EC?? F???          M     call    WriteInstToLCD              
00055E 0E??               M     movlw   upper TableMenuTitle03      
000560 6EF8               M     movwf   TBLPTRU
000562 0E??               M     movlw   high TableMenuTitle03
000564 6EF7               M     movwf   TBLPTRH
000566 0E??               M     movlw   low TableMenuTitle03
000568 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
00056A EC?? F???          M     call    Write16DataToLCD
00056E 0012           00578     return
                      00579     
000570                00580 SubMenu04
                      00581     printline   TableMenuTitle04, B'10000000'
000570 0E80               M     movlw   B'10000000'                
000572 EC?? F???          M     call    WriteInstToLCD              
000576 0E??               M     movlw   upper TableMenuTitle04      
000578 6EF8               M     movwf   TBLPTRU
00057A 0E??               M     movlw   high TableMenuTitle04
00057C 6EF7               M     movwf   TBLPTRH
00057E 0E??               M     movlw   low TableMenuTitle04
000580 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
000582 EC?? F???          M     call    Write16DataToLCD
000586 0012           00582     return
                      00583     
000588                00584 SubMenu05
                      00585     printline   TableMenuTitle05, B'10000000'
000588 0E80               M     movlw   B'10000000'                
00058A EC?? F???          M     call    WriteInstToLCD              
00058E 0E??               M     movlw   upper TableMenuTitle05      
000590 6EF8               M     movwf   TBLPTRU
000592 0E??               M     movlw   high TableMenuTitle05
000594 6EF7               M     movwf   TBLPTRH
000596 0E??               M     movlw   low TableMenuTitle05
000598 6EF6               M     movwf   TBLPTRL
MPASM 5.65                          MAIN.ASM   2-29-2016  13:28:13         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ; Do 16 Loops to display all 16 characters in the TableName
00059A EC?? F???          M     call    Write16DataToLCD
00059E 0012           00586     return
                      00587     
0005A0                00588 SubMenu06
                      00589     printline   TableMenuTitle06, B'10000000'
0005A0 0E80               M     movlw   B'10000000'                
0005A2 EC?? F???          M     call    WriteInstToLCD              
0005A6 0E??               M     movlw   upper TableMenuTitle06      
0005A8 6EF8               M     movwf   TBLPTRU
0005AA 0E??               M     movlw   high TableMenuTitle06
0005AC 6EF7               M     movwf   TBLPTRH
0005AE 0E??               M     movlw   low TableMenuTitle06
0005B0 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
0005B2 EC?? F???          M     call    Write16DataToLCD
0005B6 0012           00590     return
                      00591     
0005B8                00592 SubMenu07
                      00593     printline   TableMenuTitle07, B'10000000'
0005B8 0E80               M     movlw   B'10000000'                
0005BA EC?? F???          M     call    WriteInstToLCD              
0005BE 0E??               M     movlw   upper TableMenuTitle07      
0005C0 6EF8               M     movwf   TBLPTRU
0005C2 0E??               M     movlw   high TableMenuTitle07
0005C4 6EF7               M     movwf   TBLPTRH
0005C6 0E??               M     movlw   low TableMenuTitle07
0005C8 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
0005CA EC?? F???          M     call    Write16DataToLCD
0005CE 0012           00594     return
                      00595     
0005D0                00596 SubMenu08
                      00597     printline   TableMenuTitle08, B'10000000'
0005D0 0E80               M     movlw   B'10000000'                
0005D2 EC?? F???          M     call    WriteInstToLCD              
0005D6 0E??               M     movlw   upper TableMenuTitle08      
0005D8 6EF8               M     movwf   TBLPTRU
0005DA 0E??               M     movlw   high TableMenuTitle08
0005DC 6EF7               M     movwf   TBLPTRH
0005DE 0E??               M     movlw   low TableMenuTitle08
0005E0 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
0005E2 EC?? F???          M     call    Write16DataToLCD
0005E6 0012           00598     return
                      00599     
0005E8                00600 SubMenu10
                      00601     printline   TableMenuTitle10, B'10000000'
0005E8 0E80               M     movlw   B'10000000'                
0005EA EC?? F???          M     call    WriteInstToLCD              
0005EE 0E??               M     movlw   upper TableMenuTitle10      
0005F0 6EF8               M     movwf   TBLPTRU
0005F2 0E??               M     movlw   high TableMenuTitle10
0005F4 6EF7               M     movwf   TBLPTRH
0005F6 0E??               M     movlw   low TableMenuTitle10
0005F8 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
0005FA EC?? F???          M     call    Write16DataToLCD
0005FE 0012           00602     return
                      00603     
000600                00604 SubMenu11
                      00605     printline   TableMenuTitle11, B'10000000'
000600 0E80               M     movlw   B'10000000'                
000602 EC?? F???          M     call    WriteInstToLCD              
000606 0E??               M     movlw   upper TableMenuTitle11      
000608 6EF8               M     movwf   TBLPTRU
00060A 0E??               M     movlw   high TableMenuTitle11
00060C 6EF7               M     movwf   TBLPTRH
00060E 0E??               M     movlw   low TableMenuTitle11
000610 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
000612 EC?? F???          M     call    Write16DataToLCD
000616 0012           00606     return
                      00607     
MPASM 5.65                          MAIN.ASM   2-29-2016  13:28:13         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000618                00608 SubMenu12
                      00609     printline   TableMenuTitle12, B'10000000'
000618 0E80               M     movlw   B'10000000'                
00061A EC?? F???          M     call    WriteInstToLCD              
00061E 0E??               M     movlw   upper TableMenuTitle12      
000620 6EF8               M     movwf   TBLPTRU
000622 0E??               M     movlw   high TableMenuTitle12
000624 6EF7               M     movwf   TBLPTRH
000626 0E??               M     movlw   low TableMenuTitle12
000628 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
00062A EC?? F???          M     call    Write16DataToLCD
00062E 0012           00610     return
                      00611     
000630                00612 SubMenu20
                      00613     printline   TableMenuTitle20, B'10000000'
000630 0E80               M     movlw   B'10000000'                
000632 EC?? F???          M     call    WriteInstToLCD              
000636 0E??               M     movlw   upper TableMenuTitle20      
000638 6EF8               M     movwf   TBLPTRU
00063A 0E??               M     movlw   high TableMenuTitle20
00063C 6EF7               M     movwf   TBLPTRH
00063E 0E??               M     movlw   low TableMenuTitle20
000640 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
000642 EC?? F???          M     call    Write16DataToLCD
000646 0012           00614     return
                      00615     
000648                00616 SubMenu30
000648 0012           00617     return
                      00618     
00064A                00619 SubMenu100
                      00620     printline   TableMenuTitle100, B'10000000'
00064A 0E80               M     movlw   B'10000000'                
00064C EC?? F???          M     call    WriteInstToLCD              
000650 0E??               M     movlw   upper TableMenuTitle100     
000652 6EF8               M     movwf   TBLPTRU
000654 0E??               M     movlw   high TableMenuTitle100
000656 6EF7               M     movwf   TBLPTRH
000658 0E??               M     movlw   low TableMenuTitle100
00065A 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
00065C EC?? F???          M     call    Write16DataToLCD
000660 0012           00621     return
                      00622     
000662                00623 SubMenu101
                      00624     printline   TableMenuTitle101, B'10000000'
000662 0E80               M     movlw   B'10000000'                
000664 EC?? F???          M     call    WriteInstToLCD              
000668 0E??               M     movlw   upper TableMenuTitle101     
00066A 6EF8               M     movwf   TBLPTRU
00066C 0E??               M     movlw   high TableMenuTitle101
00066E 6EF7               M     movwf   TBLPTRH
000670 0E??               M     movlw   low TableMenuTitle101
000672 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
000674 EC?? F???          M     call    Write16DataToLCD
000678 0012           00625     return
                      00626 
00067A                00627 SubMenu102
                      00628     printline   TableMenuTitle102, B'10000000'
00067A 0E80               M     movlw   B'10000000'                
00067C EC?? F???          M     call    WriteInstToLCD              
000680 0E??               M     movlw   upper TableMenuTitle102     
000682 6EF8               M     movwf   TBLPTRU
000684 0E??               M     movlw   high TableMenuTitle102
000686 6EF7               M     movwf   TBLPTRH
000688 0E??               M     movlw   low TableMenuTitle102
00068A 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
00068C EC?? F???          M     call    Write16DataToLCD
000690 C03A F035      00629     movff       LineStartTracker, LinePositionTracker
                      00630     store       NumBarrels, B'11'
000694 0E03               M     movlw   B'11'
MPASM 5.65                          MAIN.ASM   2-29-2016  13:28:13         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000696 6E52               M     movwf   NumBarrels
000698 C052 F053      00631     movff       NumBarrels, BarrelNumber
00069C 0E7F           00632     movlw       B'1111111'
00069E 6E51           00633     movwf       NumReg256
Warning[207]: Found label after column 1. (scrollLoop)
0006A0                00634     scrollLoop
                      00635     
0006A0 0E4F           00636         movlw       B'1001111'
0006A2 6E50           00637         movwf       NumReg
                      00638 
0006A4 EC?? F???      00639         call        numregtobcdreg
                      00640         printnum    BCDRegOne, LinePositionTracker, B'10000000'
0006A8 5035               M     movf    LinePositionTracker, w 
0006AA 0980               M     iorlw   B'10000000' 
0006AC EC?? F???          M     call    WriteInstToLCD
0006B0 5068               M     movf    BCDRegOne, w
0006B2 0F30               M     addlw   B'110000'
0006B4 EC?? F???          M     call    WriteDataToLCD
0006B8 2A35           00641         incf        LinePositionTracker
                      00642         printnum    BCDRegTwo, LinePositionTracker, B'10000000'
0006BA 5035               M     movf    LinePositionTracker, w 
0006BC 0980               M     iorlw   B'10000000' 
0006BE EC?? F???          M     call    WriteInstToLCD
0006C2 5069               M     movf    BCDRegTwo, w
0006C4 0F30               M     addlw   B'110000'
0006C6 EC?? F???          M     call    WriteDataToLCD
0006CA 2A35           00643         incf        LinePositionTracker
                      00644         printnum    BCDRegThree, LinePositionTracker, B'10000000'
0006CC 5035               M     movf    LinePositionTracker, w 
0006CE 0980               M     iorlw   B'10000000' 
0006D0 EC?? F???          M     call    WriteInstToLCD
0006D4 506A               M     movf    BCDRegThree, w
0006D6 0F30               M     addlw   B'110000'
0006D8 EC?? F???          M     call    WriteDataToLCD
0006DC 2A35           00645         incf        LinePositionTracker
                      00646         printch     B'01100011', LinePositionTracker, B'10000000'
0006DE 5035               M     movf    LinePositionTracker, w 
0006E0 0980               M     iorlw   B'10000000'
0006E2 EC?? F???          M     call    WriteInstToLCD
0006E6 0E63               M     movlw   B'01100011'
0006E8 EC?? F???          M     call    WriteDataToLCD
0006EC 2A35           00647         incf        LinePositionTracker
                      00648         printch     B'01101101', LinePositionTracker, B'10000000'
0006EE 5035               M     movf    LinePositionTracker, w 
0006F0 0980               M     iorlw   B'10000000'
0006F2 EC?? F???          M     call    WriteInstToLCD
0006F6 0E6D               M     movlw   B'01101101'
0006F8 EC?? F???          M     call    WriteDataToLCD
0006FC 2A35           00649         incf        LinePositionTracker
0006FE 2A35           00650         incf        LinePositionTracker
000700 3251           00651         rrcf        NumReg256
000702 2E53           00652         decfsz      BarrelNumber
000704 D???           00653         bra         scrollLoop
000706 0012           00654     return
                      00655     
000708                00656 SubMenu103
                      00657     printline   TableMenuTitle103, B'10000000'
000708 0E80               M     movlw   B'10000000'                
00070A EC?? F???          M     call    WriteInstToLCD              
00070E 0E??               M     movlw   upper TableMenuTitle103     
000710 6EF8               M     movwf   TBLPTRU
000712 0E??               M     movlw   high TableMenuTitle103
000714 6EF7               M     movwf   TBLPTRH
000716 0E??               M     movlw   low TableMenuTitle103
000718 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
00071A EC?? F???          M     call    Write16DataToLCD
00071E 0012           00658     return
                      00659     
                      00660 ; QuitPushed
                      00661 ; Input: PrevButtonState            Output: OperatingMode, MenuLocation, ButtonPushed
000720                00662 QuitPushed
000720 B633           00663     btfsc   PrevButtonState, 3
000722 0012           00664     return
MPASM 5.65                          MAIN.ASM   2-29-2016  13:28:13         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[207]: Found label after column 1. (QuitButtonJustPressed)
000724                00665     QuitButtonJustPressed
                      00666         ifequalb    MenuLocation, B'11000000', BackAndQuit
000724 0EC0               M     movlw   B'11000000'
000726 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000728 B4D8               M     btfsc   STATUS, 2
00072A EF?? F???          M     goto    BackAndQuit
                      00667         ifequalb    MenuLocation, B'11000001', BackAndQuit
00072E 0EC1               M     movlw   B'11000001'
000730 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000732 B4D8               M     btfsc   STATUS, 2
000734 EF?? F???          M     goto    BackAndQuit
                      00668         ifequalb    MenuLocation, B'11000010', BackAndQuit
000738 0EC2               M     movlw   B'11000010'
00073A 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
00073C B4D8               M     btfsc   STATUS, 2
00073E EF?? F???          M     goto    BackAndQuit
                      00669         ifequalb    MenuLocation, B'11000011', BackAndQuit
000742 0EC3               M     movlw   B'11000011'
000744 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000746 B4D8               M     btfsc   STATUS, 2
000748 EF?? F???          M     goto    BackAndQuit
                      00670         ifequalb    MenuLocation, B'11000100', BackAndQuit
00074C 0EC4               M     movlw   B'11000100'
00074E 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000750 B4D8               M     btfsc   STATUS, 2
000752 EF?? F???          M     goto    BackAndQuit
                      00671         ifequalb    MenuLocation, B'11000101', BackAndQuit
000756 0EC5               M     movlw   B'11000101'
000758 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
00075A B4D8               M     btfsc   STATUS, 2
00075C EF?? F???          M     goto    BackAndQuit
                      00672         ifequalb    MenuLocation, B'11000111', BackAndQuit
000760 0EC7               M     movlw   B'11000111'
000762 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000764 B4D8               M     btfsc   STATUS, 2
000766 EF?? F???          M     goto    BackAndQuit
                      00673         ifequalb    MenuLocation, B'11001000', BackAndQuit
00076A 0EC8               M     movlw   B'11001000'
00076C 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
00076E B4D8               M     btfsc   STATUS, 2
000770 EF?? F???          M     goto    BackAndQuit
                      00674         ifequalb    MenuLocation, B'11010000', QuitOne
000774 0ED0               M     movlw   B'11010000'
000776 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000778 B4D8               M     btfsc   STATUS, 2
00077A EF?? F???          M     goto    QuitOne
                      00675         ifequalb    MenuLocation, B'11010001', QuitOne
00077E 0ED1               M     movlw   B'11010001'
000780 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000782 B4D8               M     btfsc   STATUS, 2
000784 EF?? F???          M     goto    QuitOne
                      00676         ifequalb    MenuLocation, B'11010011', QuitOne
000788 0ED3               M     movlw   B'11010011'
00078A 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
00078C B4D8               M     btfsc   STATUS, 2
00078E EF?? F???          M     goto    QuitOne
                      00677         ifequalb    MenuLocation, B'11100000', QuitOne
000792 0EE0               M     movlw   B'11100000'
000794 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000796 B4D8               M     btfsc   STATUS, 2
000798 EF?? F???          M     goto    QuitOne
                      00678         ifequalb    MenuLocation, B'11110000', QuitOne
00079C 0EF0               M     movlw   B'11110000'
00079E 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0007A0 B4D8               M     btfsc   STATUS, 2
0007A2 EF?? F???          M     goto    QuitOne
                      00679         ifequalb    MenuLocation, B'01000000', QuitTwo
0007A6 0E40               M     movlw   B'01000000'
0007A8 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0007AA B4D8               M     btfsc   STATUS, 2
0007AC EF?? F???          M     goto    QuitTwo
                      00680         ifequalb    MenuLocation, B'01000001', QuitTwo
0007B0 0E41               M     movlw   B'01000001'
MPASM 5.65                          MAIN.ASM   2-29-2016  13:28:13         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007B2 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0007B4 B4D8               M     btfsc   STATUS, 2
0007B6 EF?? F???          M     goto    QuitTwo
                      00681         ifequalb    MenuLocation, B'01000010', QuitTwo
0007BA 0E42               M     movlw   B'01000010'
0007BC 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0007BE B4D8               M     btfsc   STATUS, 2
0007C0 EF?? F???          M     goto    QuitTwo
                      00682         ifequalb    MenuLocation, B'01000011', QuitTwo
0007C4 0E43               M     movlw   B'01000011'
0007C6 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0007C8 B4D8               M     btfsc   STATUS, 2
0007CA EF?? F???          M     goto    QuitTwo
                      00683         ifequalb    MenuLocation, B'01010000', QuitTwo
0007CE 0E50               M     movlw   B'01010000'
0007D0 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0007D2 B4D8               M     btfsc   STATUS, 2
0007D4 EF?? F???          M     goto    QuitTwo
                      00684         ifequalb    MenuLocation, B'01010001', QuitTwo
0007D8 0E51               M     movlw   B'01010001'
0007DA 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0007DC B4D8               M     btfsc   STATUS, 2
0007DE EF?? F???          M     goto    QuitTwo
                      00685         ifequalb    MenuLocation, B'01010010', QuitTwo
0007E2 0E52               M     movlw   B'01010010'
0007E4 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0007E6 B4D8               M     btfsc   STATUS, 2
0007E8 EF?? F???          M     goto    QuitTwo
                      00686         ifequalb    MenuLocation, B'01010011', QuitTwo
0007EC 0E53               M     movlw   B'01010011'
0007EE 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0007F0 B4D8               M     btfsc   STATUS, 2
0007F2 EF?? F???          M     goto    QuitTwo
                      00687         ifequalb    MenuLocation, B'01100000', QuitTwo
0007F6 0E60               M     movlw   B'01100000'
0007F8 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0007FA B4D8               M     btfsc   STATUS, 2
0007FC EF?? F???          M     goto    QuitTwo
                      00688         ifequalb    MenuLocation, B'01100001', QuitTwo
000800 0E61               M     movlw   B'01100001'
000802 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000804 B4D8               M     btfsc   STATUS, 2
000806 EF?? F???          M     goto    QuitTwo
                      00689         ifequalb    MenuLocation, B'01100010', QuitTwo
00080A 0E62               M     movlw   B'01100010'
00080C 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
00080E B4D8               M     btfsc   STATUS, 2
000810 EF?? F???          M     goto    QuitTwo
                      00690         ifequalb    MenuLocation, B'01100011', QuitTwo
000814 0E63               M     movlw   B'01100011'
000816 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000818 B4D8               M     btfsc   STATUS, 2
00081A EF?? F???          M     goto    QuitTwo
                      00691         
00081E 0012           00692         return
Warning[207]: Found label after column 1. (EndIfQuit)
000820                00693         EndIfQuit
000820 8034           00694         bsf     ButtonPushed, 0
000822 0012           00695         return
000824                00696 QuitOne
                      00697     store   Temp0, B'100'
000824 0E04               M     movlw   B'100'
000826 6E20               M     movwf   Temp0
Warning[207]: Found label after column 1. (QuitOneForLoop)
000828                00698     QuitOneForLoop
000828 80D8           00699         bsf         STATUS, 0
00082A 3230           00700         rrcf        MenuLocation, f
00082C 0620           00701         decf        Temp0
                      00702         ifnequalb    Temp0, B'0', QuitOneForLoop        
00082E 0E00               M     movlw   B'0'
000830 5C20               M     subwf   Temp0, 0                    ; check if Var-Value!=0
000832 A4D8               M     btfss   STATUS, 2
000834 EF?? F???          M     goto    QuitOneForLoop
000838 EF?? F???      00703     goto    EndIfQuit
MPASM 5.65                          MAIN.ASM   2-29-2016  13:28:13         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00704     
00083C                00705 QuitTwo
                      00706     store   OperatingMode, B'0'
00083C 0E00               M     movlw   B'0'
00083E 6E31               M     movwf   OperatingMode
                      00707     store   Temp0, B'10'
000840 0E02               M     movlw   B'10'
000842 6E20               M     movwf   Temp0
Warning[207]: Found label after column 1. (QuitTwoForLoop)
000844                00708     QuitTwoForLoop
000844 80D8           00709         bsf         STATUS, 0
000846 3230           00710         rrcf        MenuLocation, f
000848 0620           00711         decf        Temp0
                      00712         ifnequalb   Temp0, B'0', QuitTwoForLoop         
00084A 0E00               M     movlw   B'0'
00084C 5C20               M     subwf   Temp0, 0                    ; check if Var-Value!=0
00084E A4D8               M     btfss   STATUS, 2
000850 EF?? F???          M     goto    QuitTwoForLoop
000854 EF?? F???      00713     goto    EndIfQuit
                      00714     
000858                00715 BackAndQuit
                      00716     store OperatingMode, B'0'
000858 0E00               M     movlw   B'0'
00085A 6E31               M     movwf   OperatingMode
00085C EF?? F???      00717     goto    QuitOne
                      00718     
                      00719 ; RightPushed
                      00720 ; Input: PrevButtonState            Output: OperatingMode, MenuLocation, ButtonPushed
000860                00721 RightPushed
                      00722     
000860 B233           00723     btfsc       PrevButtonState, 1
000862 0012           00724     return
                      00725     
Warning[207]: Found label after column 1. (RightButtonJustPressed)
000864                00726     RightButtonJustPressed
                      00727         ifequalb    MenuLocation, B'11111100', ScrollDownOne
000864 0EFC               M     movlw   B'11111100'
000866 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000868 B4D8               M     btfsc   STATUS, 2
00086A EF?? F???          M     goto    ScrollDownOne
                      00728         ifequalb    MenuLocation, B'11111101', ScrollDownOne
00086E 0EFD               M     movlw   B'11111101'
000870 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000872 B4D8               M     btfsc   STATUS, 2
000874 EF?? F???          M     goto    ScrollDownOne
                      00729         ifequalb    MenuLocation, B'11111110', ScrollDownOne
000878 0EFE               M     movlw   B'11111110'
00087A 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
00087C B4D8               M     btfsc   STATUS, 2
00087E EF?? F???          M     goto    ScrollDownOne
                      00730         ifequalb    MenuLocation, B'11000111', ScrollDownOne
000882 0EC7               M     movlw   B'11000111'
000884 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000886 B4D8               M     btfsc   STATUS, 2
000888 EF?? F???          M     goto    ScrollDownOne
                      00731         ifequalb    MenuLocation, B'11010000', ScrollDownOne
00088C 0ED0               M     movlw   B'11010000'
00088E 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000890 B4D8               M     btfsc   STATUS, 2
000892 EF?? F???          M     goto    ScrollDownOne
                      00732         ifequalb    MenuLocation, B'11010001', ScrollDownOne
000896 0ED1               M     movlw   B'11010001'
000898 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
00089A B4D8               M     btfsc   STATUS, 2
00089C EF?? F???          M     goto    ScrollDownOne
                      00733         ifequalb    MenuLocation, B'01000000', ScrollDownOne
0008A0 0E40               M     movlw   B'01000000'
0008A2 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0008A4 B4D8               M     btfsc   STATUS, 2
0008A6 EF?? F???          M     goto    ScrollDownOne
                      00734         ifequalb    MenuLocation, B'01000001', ScrollDownOne
0008AA 0E41               M     movlw   B'01000001'
0008AC 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0008AE B4D8               M     btfsc   STATUS, 2
MPASM 5.65                          MAIN.ASM   2-29-2016  13:28:13         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008B0 EF?? F???          M     goto    ScrollDownOne
                      00735         ifequalb    MenuLocation, B'01000010', ScrollDownOne
0008B4 0E42               M     movlw   B'01000010'
0008B6 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0008B8 B4D8               M     btfsc   STATUS, 2
0008BA EF?? F???          M     goto    ScrollDownOne
                      00736         ifequalb    MenuLocation, B'01000100', ScrollDownOne
0008BE 0E44               M     movlw   B'01000100'
0008C0 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0008C2 B4D8               M     btfsc   STATUS, 2
0008C4 EF?? F???          M     goto    ScrollDownOne
                      00737         ifequalb    MenuLocation, B'01000101', ScrollDownOne
0008C8 0E45               M     movlw   B'01000101'
0008CA 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0008CC B4D8               M     btfsc   STATUS, 2
0008CE EF?? F???          M     goto    ScrollDownOne
                      00738         ifequalb    MenuLocation, B'01000110', ScrollDownOne
0008D2 0E46               M     movlw   B'01000110'
0008D4 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0008D6 B4D8               M     btfsc   STATUS, 2
0008D8 EF?? F???          M     goto    ScrollDownOne
                      00739         ifequalb    MenuLocation, B'01001000', ScrollDownOne
0008DC 0E48               M     movlw   B'01001000'
0008DE 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0008E0 B4D8               M     btfsc   STATUS, 2
0008E2 EF?? F???          M     goto    ScrollDownOne
                      00740         ifequalb    MenuLocation, B'01001001', ScrollDownOne
0008E6 0E49               M     movlw   B'01001001'
0008E8 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0008EA B4D8               M     btfsc   STATUS, 2
0008EC EF?? F???          M     goto    ScrollDownOne
                      00741         ifequalb    MenuLocation, B'01001010', ScrollDownOne
0008F0 0E4A               M     movlw   B'01001010'
0008F2 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0008F4 B4D8               M     btfsc   STATUS, 2
0008F6 EF?? F???          M     goto    ScrollDownOne
0008FA 0012           00742         return
Warning[207]: Found label after column 1. (EndIfScrollRight)
0008FC                00743         EndIfScrollRight
0008FC 8034           00744         bsf     ButtonPushed, 0
0008FE 0012           00745         return
                      00746         
000900                00747 ScrollDownOne
000900 2A30           00748     incf            MenuLocation
000902 EF?? F???      00749     goto            EndIfScrollRight 
                      00750     
                      00751     
                      00752 ; LeftPushed
                      00753 ; Input: PrevButtonState            Output: OperatingMode, MenuLocation, ButtonPushed
000906                00754 LeftPushed
000906 B033           00755     btfsc   PrevButtonState, 0
000908 0012           00756     return
Warning[207]: Found label after column 1. (LeftButtonJustPressed)
00090A                00757     LeftButtonJustPressed
                      00758         ifequalb    MenuLocation, B'11111101', ScrollUpOne
00090A 0EFD               M     movlw   B'11111101'
00090C 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
00090E B4D8               M     btfsc   STATUS, 2
000910 EF?? F???          M     goto    ScrollUpOne
                      00759         ifequalb    MenuLocation, B'11111110', ScrollUpOne
000914 0EFE               M     movlw   B'11111110'
000916 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000918 B4D8               M     btfsc   STATUS, 2
00091A EF?? F???          M     goto    ScrollUpOne
                      00760         ifequalb    MenuLocation, B'11111111', ScrollUpOne
00091E 0EFF               M     movlw   B'11111111'
000920 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000922 B4D8               M     btfsc   STATUS, 2
000924 EF?? F???          M     goto    ScrollUpOne
                      00761         ifequalb    MenuLocation, B'11001000', ScrollUpOne
000928 0EC8               M     movlw   B'11001000'
00092A 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
00092C B4D8               M     btfsc   STATUS, 2
00092E EF?? F???          M     goto    ScrollUpOne
MPASM 5.65                          MAIN.ASM   2-29-2016  13:28:13         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00762         ifequalb    MenuLocation, B'11010001', ScrollUpOne
000932 0ED1               M     movlw   B'11010001'
000934 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000936 B4D8               M     btfsc   STATUS, 2
000938 EF?? F???          M     goto    ScrollUpOne
                      00763         ifequalb    MenuLocation, B'11010010', ScrollUpOne
00093C 0ED2               M     movlw   B'11010010'
00093E 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000940 B4D8               M     btfsc   STATUS, 2
000942 EF?? F???          M     goto    ScrollUpOne
                      00764         ifequalb    MenuLocation, B'01000001', ScrollUpOne
000946 0E41               M     movlw   B'01000001'
000948 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
00094A B4D8               M     btfsc   STATUS, 2
00094C EF?? F???          M     goto    ScrollUpOne
                      00765         ifequalb    MenuLocation, B'01000010', ScrollUpOne
000950 0E42               M     movlw   B'01000010'
000952 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000954 B4D8               M     btfsc   STATUS, 2
000956 EF?? F???          M     goto    ScrollUpOne
                      00766         ifequalb    MenuLocation, B'01000011', ScrollUpOne
00095A 0E43               M     movlw   B'01000011'
00095C 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
00095E B4D8               M     btfsc   STATUS, 2
000960 EF?? F???          M     goto    ScrollUpOne
                      00767         ifequalb    MenuLocation, B'01000101', ScrollUpOne
000964 0E45               M     movlw   B'01000101'
000966 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000968 B4D8               M     btfsc   STATUS, 2
00096A EF?? F???          M     goto    ScrollUpOne
                      00768         ifequalb    MenuLocation, B'01000110', ScrollUpOne
00096E 0E46               M     movlw   B'01000110'
000970 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000972 B4D8               M     btfsc   STATUS, 2
000974 EF?? F???          M     goto    ScrollUpOne
                      00769         ifequalb    MenuLocation, B'01000111', ScrollUpOne
000978 0E47               M     movlw   B'01000111'
00097A 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
00097C B4D8               M     btfsc   STATUS, 2
00097E EF?? F???          M     goto    ScrollUpOne
                      00770         ifequalb    MenuLocation, B'01001001', ScrollUpOne
000982 0E49               M     movlw   B'01001001'
000984 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000986 B4D8               M     btfsc   STATUS, 2
000988 EF?? F???          M     goto    ScrollUpOne
                      00771         ifequalb    MenuLocation, B'01001010', ScrollUpOne
00098C 0E4A               M     movlw   B'01001010'
00098E 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000990 B4D8               M     btfsc   STATUS, 2
000992 EF?? F???          M     goto    ScrollUpOne
                      00772         ifequalb    MenuLocation, B'01001011', ScrollUpOne
000996 0E4B               M     movlw   B'01001011'
000998 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
00099A B4D8               M     btfsc   STATUS, 2
00099C EF?? F???          M     goto    ScrollUpOne
0009A0 0012           00773         return
Warning[207]: Found label after column 1. (EndIfScrollLeft)
0009A2                00774         EndIfScrollLeft
0009A2 8034           00775         bsf     ButtonPushed, 0
0009A4 0012           00776         return
                      00777         
                      00778         
0009A6                00779 ScrollUpOne
0009A6 0630           00780     decf   MenuLocation
0009A8 EF?? F???      00781     goto    EndIfScrollLeft
                      00782     
                      00783 
                      00784     
                      00785 ; SelectedPushed
                      00786 ; Input: PrevButtonState            Output: OperatingMode, MenuLocation, ButtonPushed
0009AC                00787 SelectedPushed
0009AC B433           00788     btfsc   PrevButtonState, 2
0009AE 0012           00789     return
                      00790 
MPASM 5.65                          MAIN.ASM   2-29-2016  13:28:13         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[207]: Found label after column 1. (SelectButtonJustPressed)
0009B0                00791     SelectButtonJustPressed
                      00792         ifequalb    MenuLocation, B'11111100', EnterOneAndStart
0009B0 0EFC               M     movlw   B'11111100'
0009B2 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0009B4 B4D8               M     btfsc   STATUS, 2
0009B6 EF?? F???          M     goto    EnterOneAndStart
                      00793         ifequalb    MenuLocation, B'11111101', EnterOne
0009BA 0EFD               M     movlw   B'11111101'
0009BC 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0009BE B4D8               M     btfsc   STATUS, 2
0009C0 EF?? F???          M     goto    EnterOne
                      00794         ifequalb    MenuLocation, B'11111110', EnterOne
0009C4 0EFE               M     movlw   B'11111110'
0009C6 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0009C8 B4D8               M     btfsc   STATUS, 2
0009CA EF?? F???          M     goto    EnterOne
                      00795         ifequalb    MenuLocation, B'11111111', EnterOne
0009CE 0EFF               M     movlw   B'11111111'
0009D0 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0009D2 B4D8               M     btfsc   STATUS, 2
0009D4 EF?? F???          M     goto    EnterOne
                      00796         ifequalb    MenuLocation, B'11000111', Save
0009D8 0EC7               M     movlw   B'11000111'
0009DA 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0009DC B4D8               M     btfsc   STATUS, 2
0009DE EF?? F???          M     goto    Save
                      00797         ifequalb    MenuLocation, B'11001000', QuitOne
0009E2 0EC8               M     movlw   B'11001000'
0009E4 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0009E6 B4D8               M     btfsc   STATUS, 2
0009E8 EF?? F???          M     goto    QuitOne
                      00798         ifequalb    MenuLocation, B'11010000', EnterTwo
0009EC 0ED0               M     movlw   B'11010000'
0009EE 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0009F0 B4D8               M     btfsc   STATUS, 2
0009F2 EF?? F???          M     goto    EnterTwo
                      00799         ifequalb    MenuLocation, B'11010001', EnterTwo
0009F6 0ED1               M     movlw   B'11010001'
0009F8 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
0009FA B4D8               M     btfsc   STATUS, 2
0009FC EF?? F???          M     goto    EnterTwo
                      00800         ifequalb    MenuLocation, B'11010010', EnterTwo
000A00 0ED2               M     movlw   B'11010010'
000A02 5C30               M     subwf   MenuLocation, 0             ; check if Var-Value=0
000A04 B4D8               M     btfsc   STATUS, 2
000A06 EF?? F???          M     goto    EnterTwo
000A0A 0012           00801         return
                      00802         
                      00803         
Warning[207]: Found label after column 1. (EndIfEnter)
000A0C                00804         EndIfEnter
000A0C 8034           00805         bsf         ButtonPushed, 0
000A0E 0012           00806         return
                      00807 
                      00808         
000A10                00809 EnterOneAndStart
                      00810     store   OperatingMode, B'10'
000A10 0E02               M     movlw   B'10'
000A12 6E31               M     movwf   OperatingMode
000A14 6AEA           00811     clrf    FSR0H
000A16 0E61           00812     movlw   0x61
000A18 6EE9           00813     movwf   FSR0L
000A1A 6AE2           00814     clrf    FSR1H
000A1C 0E40           00815     movlw   0x40
000A1E 6EE9           00816     movwf   FSR0L
000A20 6ADA           00817     clrf    FSR2H
000A22 0E47           00818     movlw   0x47
000A24 6ED9           00819     movwf   FSR2L    
000A26 EF?? F???      00820     goto    EnterOne
                      00821         
000A2A                00822 EnterOne
                      00823     store   Temp0, B'100'
000A2A 0E04               M     movlw   B'100'
MPASM 5.65                          MAIN.ASM   2-29-2016  13:28:13         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A2C 6E20               M     movwf   Temp0
Warning[207]: Found label after column 1. (EnterOneForLoop)
000A2E                00824     EnterOneForLoop
000A2E 90D8           00825         bcf         STATUS, 0
000A30 3630           00826         rlcf        MenuLocation, f
000A32 0620           00827         decf        Temp0
                      00828         ifnequalb    Temp0, B'0', EnterOneForLoop       
000A34 0E00               M     movlw   B'0'
000A36 5C20               M     subwf   Temp0, 0                    ; check if Var-Value!=0
000A38 A4D8               M     btfss   STATUS, 2
000A3A EF?? F???          M     goto    EnterOneForLoop
000A3E EF?? F???      00829     goto    EndIfEnter
                      00830     
000A42                00831 EnterTwo
                      00832     store   OperatingMode, B'1'
000A42 0E01               M     movlw   B'1'
000A44 6E31               M     movwf   OperatingMode
                      00833     store   Temp0, B'10'
000A46 0E02               M     movlw   B'10'
000A48 6E20               M     movwf   Temp0
Warning[207]: Found label after column 1. (EnterTwoForLoop)
000A4A                00834     EnterTwoForLoop
000A4A 90D8           00835         bcf         STATUS, 0
000A4C 3630           00836         rlcf        MenuLocation, f
000A4E 0620           00837         decf        Temp0
                      00838         ifnequalb   Temp0, B'0', EnterTwoForLoop        
000A50 0E00               M     movlw   B'0'
000A52 5C20               M     subwf   Temp0, 0                    ; check if Var-Value!=0
000A54 A4D8               M     btfss   STATUS, 2
000A56 EF?? F???          M     goto    EnterTwoForLoop
000A5A EF?? F???      00839     goto    EndIfEnter
                      00840     
                      00841 
000A5E                00842 Save
000A5E EF?? F???      00843     goto    QuitOne   
                      00844     
000A62                00845 numregtobcdreg 
000A62 6A68           00846     clrf    BCDRegOne
000A64 6A69           00847     clrf    BCDRegTwo
000A66 6A6A           00848     clrf    BCDRegThree
                      00849     
000A68 0E64           00850     movlw   B'1100100'
                      00851     
Warning[207]: Found label after column 1. (hundloop)
000A6A                00852     hundloop
                      00853         
000A6A 5E50           00854         subwf   NumReg, f
000A6C A8D8           00855         btfss   STATUS, 4
000A6E 2A68           00856         incf    BCDRegOne
000A70 A8D8           00857         btfss   STATUS, 4
000A72 D???           00858         bra     hundloop
000A74 2650           00859     addwf   NumReg, f
                      00860  
000A76 0E0A           00861     movlw   B'1010'
Warning[207]: Found label after column 1. (tenloop)
000A78                00862     tenloop
000A78 5E50           00863         subwf   NumReg, f
000A7A A8D8           00864         btfss   STATUS, 4
000A7C 2A69           00865         incf    BCDRegTwo
000A7E A8D8           00866         btfss   STATUS, 4
000A80 D???           00867         bra     tenloop
000A82 2650           00868     addwf   NumReg, f
000A84 0E01           00869     movlw   B'1'
Warning[207]: Found label after column 1. (oneloop)
000A86                00870     oneloop
000A86 5E50           00871         subwf   NumReg, f
000A88 A8D8           00872         btfss   STATUS, 4
000A8A 2A6A           00873         incf    BCDRegThree
000A8C A8D8           00874         btfss   STATUS, 4
000A8E D???           00875         bra     oneloop
                      00876         
000A90 A051           00877     btfss   NumReg256, 0
000A92 0012           00878     return
000A94 0E05           00879     movlw   B'101'
MPASM 5.65                          MAIN.ASM   2-29-2016  13:28:13         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A96 266A           00880     addwf   BCDRegThree, f
000A98 506A           00881     movf    BCDRegThree, w
000A9A 0E0A           00882     movlw   B'1010'
000A9C 5C6A           00883     subwf   BCDRegThree, w
000A9E B8D8           00884     btfsc   STATUS, 4
000AA0 D???           00885     bra     Tens
000AA2 6E6A           00886     movwf   BCDRegThree
000AA4 2A69           00887     incf    BCDRegTwo
000AA6 5069           00888     movf    BCDRegTwo, w
000AA8 0E0A           00889     movlw   B'1010'
000AAA 5C69           00890     subwf   BCDRegTwo, w
000AAC B8D8           00891     btfsc   STATUS, 4
000AAE D???           00892     bra     Tens
000AB0 6E69           00893     movwf   BCDRegTwo
000AB2 2A68           00894     incf    BCDRegOne
                      00895     
Warning[207]: Found label after column 1. (Tens)
000AB4                00896     Tens
000AB4 0E05           00897     movlw   B'101'
000AB6 2669           00898     addwf   BCDRegTwo, f
000AB8 5069           00899     movf    BCDRegTwo, w
000ABA 0E0A           00900     movlw   B'1010'
000ABC 5C69           00901     subwf   BCDRegTwo, w
000ABE B8D8           00902     btfsc   STATUS, 4
000AC0 D???           00903     bra     Huns
000AC2 6E69           00904     movwf   BCDRegTwo
000AC4 2A68           00905     incf    BCDRegOne
                      00906     
Warning[207]: Found label after column 1. (Huns)
000AC6                00907     Huns
000AC6 0E02           00908     movlw   B'10'
000AC8 2668           00909     addwf   BCDRegOne, f
                      00910     
                      00911     store   LATA, B'11'
000ACA 0E03               M     movlw   B'11'
000ACC 6E89               M     movwf   LATA
000ACE 0012           00912     return
                      00913         
                      00914     
                      00915 ; ********************************************************************************
                      00916 ; LCD Functions 
                      00917 ; ********************************************************************************
                      00918 
                      00919 ; InitializeLCD: set configuration for the LCD Display
                      00920 ; Input: None                       Output: None
000AD0                00921 InitializeLCD
                      00922         ;bsf PORTD,E     ;E default high
                      00923         
                      00924         ;Wait for LCD POR to finish (~15ms)
000AD0 EC?? F???      00925         call Delay5ms
000AD4 EC?? F???      00926         call Delay5ms
000AD8 EC?? F???      00927         call Delay5ms
                      00928 
                      00929         ;Ensure 8-bit mode first (no way to immediately guarantee 4-bit mode)
                      00930         ; -> Send b'0011' 3 times
000ADC 948A           00931         bcf     LCD_RS       ;Instruction mode
000ADE 0E30           00932         movlw   B'00110000'
000AE0 EC?? F???      00933         call    MoveMSB
000AE4 EC?? F???      00934         call    ClockLCD         ;Finish last 4-bit send (if reset occurred in middle of a send)
000AE8 EC?? F???      00935         call    ClockLCD         ;Assuming 4-bit mode, set 8-bit mode
000AEC EC?? F???      00936         call    Delay5ms   ;->max instruction time ~= 5ms
000AF0 EC?? F???      00937         call    ClockLCD         ;(note: if it's in 8-bit mode already, it will stay in 8-bit mode)
                      00938 
                      00939     ;Now that we know for sure it's in 8-bit mode, set 4-bit mode.
000AF4 0E20           00940         movlw B'00100000'
000AF6 EC?? F???      00941         call MoveMSB
000AFA EC?? F???      00942         call ClockLCD
000AFE EC?? F???      00943         call    Delay5ms   ;->max instruction time ~= 5ms
                      00944         ;Give LCD init instructions
000B02 0E28           00945         movlw   B'00101000' ; 4 bits, 2 lines,5X8 dot
000B04 EC?? F???      00946         call    WriteInstToLCD
000B08 EC?? F???      00947         call    Delay5ms   ;->max instruction time ~= 5ms
000B0C 0E0F           00948         movlw   B'00001111' ; display on,cursor,blink
000B0E EC?? F???      00949         call    WriteInstToLCD
MPASM 5.65                          MAIN.ASM   2-29-2016  13:28:13         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B12 EC?? F???      00950         call    Delay5ms   ;->max instruction time ~= 5ms
000B16 0E06           00951         movlw   B'00000110' ; Increment,no shift
000B18 EC?? F???      00952         call    WriteInstToLCD
000B1C EC?? F???      00953         call    Delay5ms   ;->max instruction time ~= 5ms
                      00954         ;Ready to display characters
000B20 EC?? F???      00955         call    ClearLCD
000B24 848A           00956         bsf     LCD_RS    ;Character mode
000B26 0012           00957         return
                      00958         
                      00959     
                      00960     
                      00961     
                      00962 ; WriteInstToLCD: sequences of command to modify the config of LCD
                      00963 ; Input: W                         Output: None
000B28                00964 WriteInstToLCD
000B28 948A           00965     bcf     LCD_RS                  ; clear RS to enter instruction mode
000B2A 6E20           00966     movwf   Temp0                   ; store into Temporary register
000B2C EC?? F???      00967     call    MoveMSB
000B30 EC?? F???      00968     call    ClockLCD
000B34 3820           00969     swapf   Temp0, W                ; swap nibbles
000B36 EC?? F???      00970     call    MoveMSB
000B3A EC?? F???      00971     call    ClockLCD
000B3E 0012           00972     return
                      00973     
                      00974 ; WriteDataToLCD: sequences of command to display a character on LCD
                      00975 ; Input: W                          Output: None
000B40                00976 WriteDataToLCD
000B40 848A           00977     bsf     LCD_RS                  ; set RS for data mode
000B42 6E20           00978     movwf   Temp0                   ; store into Temporary register
000B44 EC?? F???      00979     call    MoveMSB
000B48 EC?? F???      00980     call    ClockLCD
000B4C 3820           00981     swapf   Temp0, W                ; swap nibbles
000B4E EC?? F???      00982     call    MoveMSB
000B52 EC?? F???      00983     call    ClockLCD
000B56 0012           00984     return
                      00985     
                      00986 ; Write16DataToLCD: Take 16 Character from the table, and display them one by
                      00987 ;                   one, by invoking the subroutine WriteDataToLCD for 16 times
                      00988 ; Input: tblrd (Table Pointer)      Output: None
000B58                00989 Write16DataToLCD
000B58 0008           00990     tblrd*                          ; read first character in table
000B5A 50F5           00991     movf    TABLAT, W
Warning[207]: Found label after column 1. (Loop16LCD)
000B5C                00992     Loop16LCD
000B5C EC?? F???      00993         call    WriteDataToLCD
000B60 000B           00994         tblrd+*                     ; increment pointer then read
000B62 50F5           00995         movf    TABLAT, W
000B64 E1??           00996         bnz     Loop16LCD
000B66 0012           00997     return
                      00998     
                      00999 ; MoveMSB: Move the upper 4 bits of W into PORTB without affecting current
                      01000 ;          values in it
                      01001 ; Input: W                       Output: None
000B68                01002 MoveMSB
000B68 0BF0           01003     andlw   0xF0
000B6A 1281           01004     iorwf   PORTB,f
000B6C 090F           01005     iorlw   0x0F
000B6E 1481           01006     andwf   PORTB,w
000B70 6E8A           01007     movwf   LATB
000B72 0012           01008     return
                      01009 
                      01010 
                      01011 ; ClearLCD: Clear the entire LCD
                      01012 ; Input: None                   Output: None
000B74                01013 ClearLCD
000B74 948A           01014     bcf     LCD_RS      ;Instruction mode
000B76 0E01           01015     movlw   b'00000001'
000B78 EC?? F???      01016     call    WriteInstToLCD
000B7C EC?? F???      01017     call    Delay5ms
000B80 0012           01018     return
                      01019     
                      01020 
                      01021     
000B82                01022 ClockLCD
MPASM 5.65                          MAIN.ASM   2-29-2016  13:28:13         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01023     ;Delay44us
000B82 868A           01024     bsf LCD_E
000B84 0000           01025     nop
                      01026         ;Delay44us   ; __    __
000B86 968A           01027     bcf LCD_E ;   |__|
000B88 EC?? F???      01028     call    Delay44us
000B8C 0012           01029     return
                      01030     
000B8E                01031 Delay5ms
                      01032                         ;2493 cycles
000B8E 0EC2           01033     movlw       0xC2
000B90 6E25           01034     movwf       DelayCounter0
000B92 0E0A           01035     movlw       0x0A
000B94 6E26           01036     movwf       DelayCounter1
Warning[207]: Found label after column 1. (Delay5msLoop)
000B96                01037     Delay5msLoop
000B96 2E25           01038         decfsz  DelayCounter0, f
000B98 EF?? F???      01039         goto    $+6
000B9C 2E26           01040         decfsz  DelayCounter1, f
000B9E EF?? F???      01041         goto    Delay5msLoop
                      01042 
                      01043                     ;3 cycles
000BA2 EF?? F???      01044     goto    $+4
000BA6 0000           01045     nop
                      01046 
                      01047                     ;4 cycles (including call)
000BA8 0012           01048     return
                      01049     
000BAA                01050 Delay44us               ;82 cycles
000BAA 0E23           01051     movlw   0x23
000BAC 6E25           01052     movwf   DelayCounter0
Warning[207]: Found label after column 1. (Delay44usLoop)
000BAE                01053     Delay44usLoop
000BAE 2E25           01054         decfsz  DelayCounter0, f
000BB0 EF?? F???      01055         goto    Delay44usLoop
000BB4 0012           01056     return
                      01057     
                      01058     
000BB6                01059 Delay500ms
                      01060                         ;999990 cycles
000BB6 0E5A           01061         movlw   0x5A
000BB8 6E25           01062         movwf   DelayCounter0
000BBA 0ECD           01063         movlw   0xCD
000BBC 6E26           01064         movwf   DelayCounter1
000BBE 0E16           01065         movlw   0x16
000BC0 6E2E           01066         movwf   DelayCounter9
Warning[207]: Found label after column 1. (Delay500msDelayLoop)
000BC2                01067     Delay500msDelayLoop
000BC2 2E25           01068         decfsz  DelayCounter0, f
000BC4 EF?? F???      01069         goto    $+6
000BC8 2E26           01070         decfsz  DelayCounter1, f
000BCA EF?? F???      01071         goto    $+6
000BCE 2E2E           01072         decfsz  DelayCounter9, f
000BD0 EF?? F???      01073         goto    Delay500msDelayLoop
                      01074 
                      01075                         ;6 cycles
000BD4 0000           01076         nop
                      01077 
                      01078                         ;4 cycles (including call)
000BD6 0012           01079         return
                      01080     
000BD8                01081 Interrupt
000BD8 EF?? F???      01082     goto    Interrupt
                      01083     
000BDC                01084 PowerOff    
                      01085     end

Errors   :     0
Warnings :    23 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

