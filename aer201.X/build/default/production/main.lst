MPASM 5.65                          MAIN.ASM   2-2-2016  21:05:23         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; ********************************************************************************
                      00002 ; Barrel Inspection Machine
                      00003 ; Ming Kun Yang (1001262224)
                      00004 ; ********************************************************************************
                      00005 
                      00006 
                      00007 #include <p18f4620.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC18F4620 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01440         LIST
                      00008     list P=18F4620, F=INHX32, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00009 
                      00010 ; ********************************************************************************
                      00011 ; Configuration bits
                      00012 ; ********************************************************************************
                      00013 
                      00014     config OSC  = HS, FCMEN = OFF, IESO = OFF
                      00015     config PWRT = OFF, BOREN = SBORDIS, BORV = 3
                      00016     config WDT  = OFF, WDTPS = 32768
                      00017     config MCLRE = ON, LPT1OSC = OFF, PBADEN = OFF, CCP2MX = PORTC
                      00018     config STVREN = ON, LVP = OFF, XINST = OFF
                      00019     config DEBUG = OFF
                      00020     config CP0 = OFF, CP1 = OFF, CP2 = OFF, CP3 = OFF, CPB = OFF, CPD = OFF
                      00021     config WRT0 = OFF, WRT1 = OFF, WRT2 = OFF, WRT3 = OFF
                      00022     config WRTB = OFF, WRTC = OFF, WRTD = OFF
                      00023     config EBTR0 = OFF, EBTR1 = OFF, EBTR2 = OFF, EBTR3 = OFF, EBTRB = OFF
                      00024     
                      00025 ; ********************************************************************************
                      00026 ; Definitions
                      00027 ; ********************************************************************************
                      00028 #define LCD_RS      PORTD, 2    
                      00029 #define LCD_E       PORTD, 3
                      00030     
                      00031 #define LEFT_B      PORTC, 0
                      00032 #define RIGHT_B     PORTC, 1
                      00033 #define SELECT_B    PORTC, 2
                      00034 #define QUIT_B      PORTC, 3
                      00035 
                      00036 
                      00037 ; ********************************************************************************
                      00038 ; General Purpose Register Assignments
                      00039 ; ********************************************************************************
                      00040 
  00000020            00041 Temp0                       equ 0x20;
  00000021            00042 Temp1                       equ 0x21;
  00000022            00043 Temp2                       equ 0x22;
  00000023            00044 Temp3                       equ 0x23;
  00000024            00045 Temp4                       equ 0x24;
                      00046 
  00000025            00047 DelayCounter0               equ 0x25;
  00000026            00048 DelayCounter1               equ 0x26;
                      00049                     
  00000030            00050 DisplayMode                 equ 0x30;
  00000031            00051 OperatingMode               equ 0x31;
  00000032            00052 PrevButtonState             equ 0x32;   
  00000033            00053 ButtonPushed                equ 0x33;               
                      00054 ; ********************************************************************************
                      00055 ; Macros
                      00056 ; ********************************************************************************
                      00057 
                      00058 
                      00059 ifequalf  macro  Var, Value, Label      ; if Label ends with return instruction
                      00060     movlw   Value
                      00061     subwf   Var, 0                      ; check if Var-Value=0
                      00062     btfsc   STATUS, 2
                      00063     call    Label
                      00064     endm
MPASM 5.65                          MAIN.ASM   2-2-2016  21:05:23         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00065     
                      00066 ifequalb  macro  Var, Value, Label      ; if Label ends with branch instruction
                      00067     movlw   Value
                      00068     subwf   Var, 0                      ; check if Var-Value=0
                      00069     btfsc   STATUS, 2
                      00070     goto    Label
                      00071     endm
                      00072 
                      00073 ifnequalf macro  Var, Value, Label      ; if Label ends with return instruction
                      00074     movlw   Value
                      00075     subwf   Var, 0                      ; check if Var-Value!=0
                      00076     btfss   STATUS, 2
                      00077     call    Label
                      00078     endm
                      00079 
                      00080 ifnequalb macro  Var, Value, Label      ; if Label ends with branch instruction
                      00081     movlw   Value
                      00082     subwf   Var, 0                      ; check if Var-Value!=0
                      00083     btfss   STATUS, 2
                      00084     goto    Label
                      00085     endm
                      00086     
                      00087 store macro Destination, Value
                      00088     movlw   Value
                      00089     movwf   Destination
                      00090     endm
                      00091     
                      00092 printline macro  TableName, LineNumber
                      00093     movlw   LineNumber                 
                      00094     call    WriteInstToLCD              
                      00095     movlw   upper TableName             
                      00096     movwf   TBLPTRU
                      00097     movlw   high TableName
                      00098     movwf   TBLPTRH
                      00099     movlw   low TableName
                      00100     movwf   TBLPTRL
                      00101     ; Do 16 Loops to display all 16 characters in the TableName
                      00102     call    Write16DataToLCD
                      00103     endm
                      00104 
                      00105 printch  macro Char, Position, LineNumber 
                      00106     movlw   LineNumber                 
                      00107     call    WriteInstToLCD
                      00108     movlw   Position
                      00109     call    WriteInstToLCD
                      00110     movlw   Char
                      00111     call    WriteDataToLCD
                      00112     endm
                      00113  
                      00114 ; ********************************************************************************
                      00115 ; Variables for Assembler
                      00116 ; ********************************************************************************
  00989680            00117 Line0           set 10000000
  00A7D8C0            00118 Line1           set 11000000
                      00119 
  00989680            00120 Char00          set 10000000
  00989681            00121 Char01          set 10000001
  0098968A            00122 Char02          set 10000010
  0098968B            00123 Char03          set 10000011
  009896E4            00124 Char04          set 10000100
  009896E5            00125 Char05          set 10000101
  009896EE            00126 Char06          set 10000110
  009896EF            00127 Char07          set 10000111
  00989A68            00128 Char08          set 10001000
  00989A69            00129 Char09          set 10001001
  00989A72            00130 Char0A          set 10001010
  00989A73            00131 Char0B          set 10001011
  00989ACC            00132 Char0C          set 10001100
  00989ACD            00133 Char0D          set 10001101
  00989AD6            00134 Char0E          set 10001110
  00989AD7            00135 Char0F          set 10001111
  00A7D8C0            00136 Char10          set 11000000
  00A7D8C1            00137 Char11          set 11000001
  00A7D8CA            00138 Char12          set 11000010
MPASM 5.65                          MAIN.ASM   2-2-2016  21:05:23         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00A7D8CB            00139 Char13          set 11000011
  00A7D924            00140 Char14          set 11000100
  00A7D925            00141 Char15          set 11000101
  00A7D92E            00142 Char16          set 11000110
  00A7D92F            00143 Char17          set 11000111
  00A7DCA8            00144 Char18          set 11001000
  00A7DCA9            00145 Char19          set 11001001
  00A7DCB2            00146 Char1A          set 11001010
  00A7DCB3            00147 Char1B          set 11001011
  00A7DD0C            00148 Char1C          set 11001100
  00A7DD0D            00149 Char1D          set 11001101
  00A7DD16            00150 Char1E          set 11001110
  00A7DD17            00151 Char1F          set 11001111
                      00152           
                      00153 ; ********************************************************************************
                      00154 ; Vector Table
                      00155 ; ********************************************************************************
                      00156 
                      00157     org     0x0000                  ; Reset vector
000000 EF?? F???      00158     goto    Main
                      00159     org     0x0008                  ; When Low Priority Interrupt occurs
000008 EF?? F???      00160     goto    Interrupt
                      00161     org     0x0018                  ; When High Priority Interrupt occurs    
000018 0010           00162     retfie
                      00163     
                      00164 ; ********************************************************************************
                      00165 ; Tables
                      00166 ; ********************************************************************************
00001A 203C 2020 2020 00167 TableMenuTitle0             db  "<     START    >", 0
       5453 5241 2054 
       2020 3E20 0000 
00002C 203C 2020 4144 00168 TableMenuTitle1             db  "<   DATA LOG   >", 0
       4154 4C20 474F 
       2020 3E20 0000 
                      00169 
00003E 4E49 5053 4345 00170 TableMenuTitle00            db  "INSPECTING.     ", 0
       4954 474E 202E 
       2020 2020 0000 
000050 4E49 5053 4345 00171 TableMenuTitle01            db  "INSPECTING..    ", 0
       4954 474E 2E2E 
       2020 2020 0000 
000062 4E49 5053 4345 00172 TableMenuTitle02            db  "INSPECTING...   ", 0
       4954 474E 2E2E 
       202E 2020 0000 
000074 4E49 5053 4345 00173 TableMenuTitle03            db  "INSPECTING....  ", 0
       4954 474E 2E2E 
       2E2E 2020 0000 
000086 4E49 5053 4345 00174 TableMenuTitle04            db  "INSPECTING..... ", 0
       4954 474E 2E2E 
       2E2E 202E 0000 
000098 4E49 5053 4345 00175 TableMenuTitle05            db  "INSPECTING......", 0
       4954 474E 2E2E 
       2E2E 2E2E 0000 
0000AA 2D2D 2D2D 4F43 00176 TableMenuTitle06            db  "----COMPLETE----", 0
       504D 454C 4554 
       2D2D 2D2D 0000 
0000BC 313C 203E 2020 00177 TableMenuTitle07            db  "<1>    SAVE DATA", 0
       5320 5641 2045 
       4144 4154 0000 
0000CE 323C 493E 534E 00178 TableMenuTitle08            db  "<2>INSPECT AGAIN", 0
       4550 5443 4120 
       4147 4E49 0000 
                      00179 
0000E0 313C 203E 2020 00180 TableMenuTitle10            db  "<1>      DATA #1", 0
       2020 4420 5441 
       2041 3123 0000 
0000F2 323C 203E 2020 00181 TableMenuTitle11            db  "<2>      DATA #2", 0
       2020 4420 5441 
       2041 3223 0000 
000104 333C 203E 2020 00182 TableMenuTitle12            db  "<3>      DATA #3", 0
       2020 4420 5441 
       2041 3323 0000 
                      00183 
                      00184 
MPASM 5.65                          MAIN.ASM   2-2-2016  21:05:23         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00185     
                      00186     
                      00187 ; ********************************************************************************
                      00188 ; Executable Code 
                      00189 ; ********************************************************************************
                      00190     
000116                00191 Main
                      00192     ; initialization
000116 6A92           00193     clrf        TRISA                   ; sets all ports as output
000118 6A93           00194     clrf        TRISB
00011A 6A94           00195     clrf        TRISC
00011C 6A95           00196     clrf        TRISD
00011E 6A96           00197     clrf        TRISE
                      00198     
000120 6A80           00199     clrf        PORTA
000122 6A81           00200     clrf        PORTB
000124 6A82           00201     clrf        PORTC
000126 6A83           00202     clrf        PORTD
000128 6A84           00203     clrf        PORTE
                      00204     
                      00205     store       TRISC, B'1111'
00012A 0E0F               M     movlw   B'1111'
00012C 6E94               M     movwf   TRISC
                      00206     
                      00207     ; EEPROM initialization $%^&$%^&
                      00208     store       DisplayMode, B'1100'
00012E 0E0C               M     movlw   B'1100'
000130 6E30               M     movwf   DisplayMode
000132 EC?? F???      00209     call        InitializeLCD
000136 EC?? F???      00210     call        UpdateDisplay
                      00211     
Warning[207]: Found label after column 1. (MainLoop)
00013A                00212     MainLoop
                      00213         ; polls push buttons
00013A B482           00214         btfsc   SELECT_B
00013C EC?? F???      00215         call    SelectedPushed
000140 B082           00216         btfsc   LEFT_B
000142 EC?? F???      00217         call    LeftPushed
000146 B282           00218         btfsc   RIGHT_B
000148 EC?? F???      00219         call    RightPushed  
00014C B682           00220         btfsc   QUIT_B
00014E EC?? F???      00221         call    QuitPushed
000152 B033           00222         btfsc   ButtonPushed, 0 
000154 EC?? F???      00223         call    UpdateDisplay
000158 9033           00224         bcf     ButtonPushed, 0
00015A CF82 F032      00225         movff   PORTC, PrevButtonState
00015E C032 FF8A      00226         movff   PrevButtonState, LATB
000162 D???           00227         bra     MainLoop
                      00228     
                      00229 ; UpdateDisplay: Updates display when user of the machine has changed modes
                      00230 ; Input: DisplayMode                Output: None
000164                00231 UpdateDisplay 
000164 EC?? F???      00232     call ClearLCD
                      00233     
                      00234     ifequalf    DisplayMode, B'00', TopMenu0
000168 0E00               M     movlw   B'00'
00016A 5C30               M     subwf   DisplayMode, 0              ; check if Var-Value=0
00016C B4D8               M     btfsc   STATUS, 2
00016E EC?? F???          M     call    TopMenu0
                      00235     ifequalf    DisplayMode, B'01', TopMenu1
000172 0E01               M     movlw   B'01'
000174 5C30               M     subwf   DisplayMode, 0              ; check if Var-Value=0
000176 B4D8               M     btfsc   STATUS, 2
000178 EC?? F???          M     call    TopMenu1
                      00236     ifequalf    DisplayMode, B'10', SubMenu00
00017C 0E02               M     movlw   B'10'
00017E 5C30               M     subwf   DisplayMode, 0              ; check if Var-Value=0
000180 B4D8               M     btfsc   STATUS, 2
000182 EC?? F???          M     call    SubMenu00
                      00237     ifequalf    DisplayMode, B'11', SubMenu01
000186 0E03               M     movlw   B'11'
000188 5C30               M     subwf   DisplayMode, 0              ; check if Var-Value=0
00018A B4D8               M     btfsc   STATUS, 2
00018C EC?? F???          M     call    SubMenu01
MPASM 5.65                          MAIN.ASM   2-2-2016  21:05:23         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00238     ifequalf    DisplayMode, B'100', SubMenu02
000190 0E04               M     movlw   B'100'
000192 5C30               M     subwf   DisplayMode, 0              ; check if Var-Value=0
000194 B4D8               M     btfsc   STATUS, 2
000196 EC?? F???          M     call    SubMenu02
                      00239     ifequalf    DisplayMode, B'101', SubMenu03
00019A 0E05               M     movlw   B'101'
00019C 5C30               M     subwf   DisplayMode, 0              ; check if Var-Value=0
00019E B4D8               M     btfsc   STATUS, 2
0001A0 EC?? F???          M     call    SubMenu03
                      00240     ifequalf    DisplayMode, B'110', SubMenu04
0001A4 0E06               M     movlw   B'110'
0001A6 5C30               M     subwf   DisplayMode, 0              ; check if Var-Value=0
0001A8 B4D8               M     btfsc   STATUS, 2
0001AA EC?? F???          M     call    SubMenu04
                      00241     ifequalf    DisplayMode, B'111', SubMenu05
0001AE 0E07               M     movlw   B'111'
0001B0 5C30               M     subwf   DisplayMode, 0              ; check if Var-Value=0
0001B2 B4D8               M     btfsc   STATUS, 2
0001B4 EC?? F???          M     call    SubMenu05
                      00242     ifequalf    DisplayMode, B'1000', SubMenu06
0001B8 0E08               M     movlw   B'1000'
0001BA 5C30               M     subwf   DisplayMode, 0              ; check if Var-Value=0
0001BC B4D8               M     btfsc   STATUS, 2
0001BE EC?? F???          M     call    SubMenu06
                      00243     ifequalf    DisplayMode, B'1001', SubMenu07
0001C2 0E09               M     movlw   B'1001'
0001C4 5C30               M     subwf   DisplayMode, 0              ; check if Var-Value=0
0001C6 B4D8               M     btfsc   STATUS, 2
0001C8 EC?? F???          M     call    SubMenu07
                      00244     ifequalf    DisplayMode, B'1010', SubMenu08
0001CC 0E0A               M     movlw   B'1010'
0001CE 5C30               M     subwf   DisplayMode, 0              ; check if Var-Value=0
0001D0 B4D8               M     btfsc   STATUS, 2
0001D2 EC?? F???          M     call    SubMenu08
                      00245     ifequalf    DisplayMode, B'1011', SubMenu10
0001D6 0E0B               M     movlw   B'1011'
0001D8 5C30               M     subwf   DisplayMode, 0              ; check if Var-Value=0
0001DA B4D8               M     btfsc   STATUS, 2
0001DC EC?? F???          M     call    SubMenu10
                      00246     ifequalf    DisplayMode, B'1100', SubMenu11
0001E0 0E0C               M     movlw   B'1100'
0001E2 5C30               M     subwf   DisplayMode, 0              ; check if Var-Value=0
0001E4 B4D8               M     btfsc   STATUS, 2
0001E6 EC?? F???          M     call    SubMenu11
                      00247     ifequalf    DisplayMode, B'1101', SubMenu12
0001EA 0E0D               M     movlw   B'1101'
0001EC 5C30               M     subwf   DisplayMode, 0              ; check if Var-Value=0
0001EE B4D8               M     btfsc   STATUS, 2
0001F0 EC?? F???          M     call    SubMenu12
0001F4 0012           00248     return
                      00249     
0001F6                00250 TopMenu0 
                      00251     printline   TableMenuTitle0, B'10000000'
0001F6 0E80               M     movlw   B'10000000'                
0001F8 EC?? F???          M     call    WriteInstToLCD              
0001FC 0E??               M     movlw   upper TableMenuTitle0       
0001FE 6EF8               M     movwf   TBLPTRU
000200 0E??               M     movlw   high TableMenuTitle0
000202 6EF7               M     movwf   TBLPTRH
000204 0E??               M     movlw   low TableMenuTitle0
000206 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
000208 EC?? F???          M     call    Write16DataToLCD
00020C 0012           00252     return
                      00253     
00020E                00254 TopMenu1 
                      00255     printline   TableMenuTitle1, B'10000000'
00020E 0E80               M     movlw   B'10000000'                
000210 EC?? F???          M     call    WriteInstToLCD              
000214 0E??               M     movlw   upper TableMenuTitle1       
000216 6EF8               M     movwf   TBLPTRU
000218 0E??               M     movlw   high TableMenuTitle1
00021A 6EF7               M     movwf   TBLPTRH
MPASM 5.65                          MAIN.ASM   2-2-2016  21:05:23         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00021C 0E??               M     movlw   low TableMenuTitle1
00021E 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
000220 EC?? F???          M     call    Write16DataToLCD
000224 0012           00256     return
                      00257     
000226                00258 SubMenu00
                      00259     printline   TableMenuTitle00, B'10000000'
000226 0E80               M     movlw   B'10000000'                
000228 EC?? F???          M     call    WriteInstToLCD              
00022C 0E??               M     movlw   upper TableMenuTitle00      
00022E 6EF8               M     movwf   TBLPTRU
000230 0E??               M     movlw   high TableMenuTitle00
000232 6EF7               M     movwf   TBLPTRH
000234 0E??               M     movlw   low TableMenuTitle00
000236 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
000238 EC?? F???          M     call    Write16DataToLCD
00023C 0012           00260     return
                      00261     
00023E                00262 SubMenu01
                      00263     printline   TableMenuTitle01, B'10000000'
00023E 0E80               M     movlw   B'10000000'                
000240 EC?? F???          M     call    WriteInstToLCD              
000244 0E??               M     movlw   upper TableMenuTitle01      
000246 6EF8               M     movwf   TBLPTRU
000248 0E??               M     movlw   high TableMenuTitle01
00024A 6EF7               M     movwf   TBLPTRH
00024C 0E??               M     movlw   low TableMenuTitle01
00024E 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
000250 EC?? F???          M     call    Write16DataToLCD
000254 0012           00264     return
                      00265     
000256                00266 SubMenu02
                      00267     printline   TableMenuTitle02, B'10000000'
000256 0E80               M     movlw   B'10000000'                
000258 EC?? F???          M     call    WriteInstToLCD              
00025C 0E??               M     movlw   upper TableMenuTitle02      
00025E 6EF8               M     movwf   TBLPTRU
000260 0E??               M     movlw   high TableMenuTitle02
000262 6EF7               M     movwf   TBLPTRH
000264 0E??               M     movlw   low TableMenuTitle02
000266 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
000268 EC?? F???          M     call    Write16DataToLCD
00026C 0012           00268     return
                      00269     
00026E                00270 SubMenu03
                      00271     printline   TableMenuTitle03, B'10000000'
00026E 0E80               M     movlw   B'10000000'                
000270 EC?? F???          M     call    WriteInstToLCD              
000274 0E??               M     movlw   upper TableMenuTitle03      
000276 6EF8               M     movwf   TBLPTRU
000278 0E??               M     movlw   high TableMenuTitle03
00027A 6EF7               M     movwf   TBLPTRH
00027C 0E??               M     movlw   low TableMenuTitle03
00027E 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
000280 EC?? F???          M     call    Write16DataToLCD
000284 0012           00272     return
                      00273     
000286                00274 SubMenu04
                      00275     printline   TableMenuTitle04, B'10000000'
000286 0E80               M     movlw   B'10000000'                
000288 EC?? F???          M     call    WriteInstToLCD              
00028C 0E??               M     movlw   upper TableMenuTitle04      
00028E 6EF8               M     movwf   TBLPTRU
000290 0E??               M     movlw   high TableMenuTitle04
000292 6EF7               M     movwf   TBLPTRH
000294 0E??               M     movlw   low TableMenuTitle04
000296 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
000298 EC?? F???          M     call    Write16DataToLCD
MPASM 5.65                          MAIN.ASM   2-2-2016  21:05:23         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00029C 0012           00276     return
                      00277     
00029E                00278 SubMenu05
                      00279     printline   TableMenuTitle05, B'10000000'
00029E 0E80               M     movlw   B'10000000'                
0002A0 EC?? F???          M     call    WriteInstToLCD              
0002A4 0E??               M     movlw   upper TableMenuTitle05      
0002A6 6EF8               M     movwf   TBLPTRU
0002A8 0E??               M     movlw   high TableMenuTitle05
0002AA 6EF7               M     movwf   TBLPTRH
0002AC 0E??               M     movlw   low TableMenuTitle05
0002AE 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
0002B0 EC?? F???          M     call    Write16DataToLCD
0002B4 0012           00280     return
                      00281     
0002B6                00282 SubMenu06
                      00283     printline   TableMenuTitle06, B'10000000'
0002B6 0E80               M     movlw   B'10000000'                
0002B8 EC?? F???          M     call    WriteInstToLCD              
0002BC 0E??               M     movlw   upper TableMenuTitle06      
0002BE 6EF8               M     movwf   TBLPTRU
0002C0 0E??               M     movlw   high TableMenuTitle06
0002C2 6EF7               M     movwf   TBLPTRH
0002C4 0E??               M     movlw   low TableMenuTitle06
0002C6 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
0002C8 EC?? F???          M     call    Write16DataToLCD
0002CC 0012           00284     return
                      00285     
0002CE                00286 SubMenu07
                      00287     printline   TableMenuTitle07, B'10000000'
0002CE 0E80               M     movlw   B'10000000'                
0002D0 EC?? F???          M     call    WriteInstToLCD              
0002D4 0E??               M     movlw   upper TableMenuTitle07      
0002D6 6EF8               M     movwf   TBLPTRU
0002D8 0E??               M     movlw   high TableMenuTitle07
0002DA 6EF7               M     movwf   TBLPTRH
0002DC 0E??               M     movlw   low TableMenuTitle07
0002DE 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
0002E0 EC?? F???          M     call    Write16DataToLCD
0002E4 0012           00288     return
                      00289     
0002E6                00290 SubMenu08
                      00291     printline   TableMenuTitle08, B'10000000'
0002E6 0E80               M     movlw   B'10000000'                
0002E8 EC?? F???          M     call    WriteInstToLCD              
0002EC 0E??               M     movlw   upper TableMenuTitle08      
0002EE 6EF8               M     movwf   TBLPTRU
0002F0 0E??               M     movlw   high TableMenuTitle08
0002F2 6EF7               M     movwf   TBLPTRH
0002F4 0E??               M     movlw   low TableMenuTitle08
0002F6 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
0002F8 EC?? F???          M     call    Write16DataToLCD
0002FC 0012           00292     return
                      00293     
0002FE                00294 SubMenu10
                      00295     printline   TableMenuTitle10, B'10000000'
0002FE 0E80               M     movlw   B'10000000'                
000300 EC?? F???          M     call    WriteInstToLCD              
000304 0E??               M     movlw   upper TableMenuTitle10      
000306 6EF8               M     movwf   TBLPTRU
000308 0E??               M     movlw   high TableMenuTitle10
00030A 6EF7               M     movwf   TBLPTRH
00030C 0E??               M     movlw   low TableMenuTitle10
00030E 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
000310 EC?? F???          M     call    Write16DataToLCD
000314 0012           00296     return
                      00297     
000316                00298 SubMenu11
                      00299     printline   TableMenuTitle11, B'10000000'
MPASM 5.65                          MAIN.ASM   2-2-2016  21:05:23         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000316 0E80               M     movlw   B'10000000'                
000318 EC?? F???          M     call    WriteInstToLCD              
00031C 0E??               M     movlw   upper TableMenuTitle11      
00031E 6EF8               M     movwf   TBLPTRU
000320 0E??               M     movlw   high TableMenuTitle11
000322 6EF7               M     movwf   TBLPTRH
000324 0E??               M     movlw   low TableMenuTitle11
000326 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
000328 EC?? F???          M     call    Write16DataToLCD
00032C 0012           00300     return
                      00301     
00032E                00302 SubMenu12
                      00303     printline   TableMenuTitle12, B'10000000'
00032E 0E80               M     movlw   B'10000000'                
000330 EC?? F???          M     call    WriteInstToLCD              
000334 0E??               M     movlw   upper TableMenuTitle12      
000336 6EF8               M     movwf   TBLPTRU
000338 0E??               M     movlw   high TableMenuTitle12
00033A 6EF7               M     movwf   TBLPTRH
00033C 0E??               M     movlw   low TableMenuTitle12
00033E 6EF6               M     movwf   TBLPTRL
                          M     ; Do 16 Loops to display all 16 characters in the TableName
000340 EC?? F???          M     call    Write16DataToLCD
000344 0012           00304     return
                      00305     
                      00306 ; QuitPushed
                      00307 ; Input: PrevButtonState            Output: OperatingMode, DisplayMode, ButtonPushed
000346                00308 QuitPushed
000346 B632           00309     btfsc   PrevButtonState, 3
000348 0012           00310     return
Warning[207]: Found label after column 1. (ButtonJustPressed)
00034A                00311     ButtonJustPressed
00034A 6A30           00312         clrf    DisplayMode
00034C 8033           00313         bsf     ButtonPushed, 0
00034E 0012           00314         return
                      00315         
                      00316 ; RightPushed
                      00317 ; Input: PrevButtonState            Output: OperatingMode, DisplayMode, ButtonPushed
000350                00318 RightPushed
000350 B232           00319     btfsc   PrevButtonState, 1
000352 0012           00320     return
Warning[207]: Found label after column 1. (RightButtonJustPressed)
000354                00321     RightButtonJustPressed
                      00322         ifequalb DisplayMode, B'00', ScrollDownOne
000354 0E00               M     movlw   B'00'
000356 5C30               M     subwf   DisplayMode, 0              ; check if Var-Value=0
000358 B4D8               M     btfsc   STATUS, 2
00035A EF?? F???          M     goto    ScrollDownOne
                      00323         ifequalb DisplayMode, B'1011', ScrollDownTwo
00035E 0E0B               M     movlw   B'1011'
000360 5C30               M     subwf   DisplayMode, 0              ; check if Var-Value=0
000362 B4D8               M     btfsc   STATUS, 2
000364 EF?? F???          M     goto    ScrollDownTwo
                      00324         ifequalb DisplayMode, B'1100', ScrollDownThree
000368 0E0C               M     movlw   B'1100'
00036A 5C30               M     subwf   DisplayMode, 0              ; check if Var-Value=0
00036C B4D8               M     btfsc   STATUS, 2
00036E EF?? F???          M     goto    ScrollDownThree
000372 0012           00325         return
Warning[207]: Found label after column 1. (EndIfScrollRight)
000374                00326         EndIfScrollRight
000374 8033           00327         bsf     ButtonPushed, 0
000376 0012           00328         return
                      00329         
000378                00330 ScrollDownOne
                      00331     store   DisplayMode, B'01'
000378 0E01               M     movlw   B'01'
00037A 6E30               M     movwf   DisplayMode
00037C D???           00332     bra     EndIfScrollRight 
                      00333     
00037E                00334 ScrollDownTwo
00037E 8489           00335     bsf     LATA, 2
                      00336     store   DisplayMode, B'1100'
MPASM 5.65                          MAIN.ASM   2-2-2016  21:05:23         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000380 0E0C               M     movlw   B'1100'
000382 6E30               M     movwf   DisplayMode
000384 D???           00337     bra     EndIfScrollRight
                      00338     
000386                00339 ScrollDownThree
000386 8689           00340     bsf     LATA, 3
                      00341     store   DisplayMode, B'1101'
000388 0E0D               M     movlw   B'1101'
00038A 6E30               M     movwf   DisplayMode
00038C D???           00342     bra     EndIfScrollRight
                      00343     
                      00344 ; LeftPushed
                      00345 ; Input: PrevButtonState            Output: OperatingMode, DisplayMode, ButtonPushed
00038E                00346 LeftPushed
00038E B032           00347     btfsc   PrevButtonState, 0
000390 0012           00348     return
Warning[207]: Found label after column 1. (LeftButtonJustPressed)
000392                00349     LeftButtonJustPressed
                      00350         ifequalb DisplayMode, B'01', ScrollUpOne
000392 0E01               M     movlw   B'01'
000394 5C30               M     subwf   DisplayMode, 0              ; check if Var-Value=0
000396 B4D8               M     btfsc   STATUS, 2
000398 EF?? F???          M     goto    ScrollUpOne
                      00351         ifequalb DisplayMode, B'1100', ScrollUpTwo
00039C 0E0C               M     movlw   B'1100'
00039E 5C30               M     subwf   DisplayMode, 0              ; check if Var-Value=0
0003A0 B4D8               M     btfsc   STATUS, 2
0003A2 EF?? F???          M     goto    ScrollUpTwo
                      00352         ifequalb DisplayMode, B'1101', ScrollUpThree
0003A6 0E0D               M     movlw   B'1101'
0003A8 5C30               M     subwf   DisplayMode, 0              ; check if Var-Value=0
0003AA B4D8               M     btfsc   STATUS, 2
0003AC EF?? F???          M     goto    ScrollUpThree
0003B0 0012           00353         return
Warning[207]: Found label after column 1. (EndIfScrollLeft)
0003B2                00354         EndIfScrollLeft
0003B2 8033           00355         bsf     ButtonPushed, 0
0003B4 0012           00356         return
                      00357         
0003B6                00358 ScrollUpOne
                      00359     store   DisplayMode, B'00'
0003B6 0E00               M     movlw   B'00'
0003B8 6E30               M     movwf   DisplayMode
0003BA D???           00360     bra     EndIfScrollLeft
                      00361     
0003BC                00362 ScrollUpTwo
0003BC 8089           00363     bsf         LATA, 0
                      00364     store   DisplayMode, B'1011'
0003BE 0E0B               M     movlw   B'1011'
0003C0 6E30               M     movwf   DisplayMode
0003C2 D???           00365     bra     EndIfScrollLeft
                      00366     
0003C4                00367 ScrollUpThree
0003C4 8289           00368     bsf         LATA, 1
                      00369     store   DisplayMode, B'1100'
0003C6 0E0C               M     movlw   B'1100'
0003C8 6E30               M     movwf   DisplayMode
0003CA D???           00370     bra     EndIfScrollLeft
                      00371     
                      00372 ; SelectedPushed
                      00373 ; Input: PrevButtonState            Output: OperatingMode, DisplayMode, ButtonPushed
0003CC                00374 SelectedPushed
0003CC B432           00375     btfsc   PrevButtonState, 2
0003CE 0012           00376     return
                      00377 
Warning[207]: Found label after column 1. (SelectButtonJustPressed)
0003D0                00378     SelectButtonJustPressed
                      00379         ifequalb    DisplayMode, B'0', EnterOne
0003D0 0E00               M     movlw   B'0'
0003D2 5C30               M     subwf   DisplayMode, 0              ; check if Var-Value=0
0003D4 B4D8               M     btfsc   STATUS, 2
0003D6 EF?? F???          M     goto    EnterOne
                      00380         ifequalb    DisplayMode, B'1', EnterTwo
0003DA 0E01               M     movlw   B'1'
MPASM 5.65                          MAIN.ASM   2-2-2016  21:05:23         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003DC 5C30               M     subwf   DisplayMode, 0              ; check if Var-Value=0
0003DE B4D8               M     btfsc   STATUS, 2
0003E0 EF?? F???          M     goto    EnterTwo
                      00381         ifequalb    DisplayMode, B'1011', EnterThree
0003E4 0E0B               M     movlw   B'1011'
0003E6 5C30               M     subwf   DisplayMode, 0              ; check if Var-Value=0
0003E8 B4D8               M     btfsc   STATUS, 2
0003EA EF?? F???          M     goto    EnterThree
                      00382         ifequalb    DisplayMode, B'1100', EnterFour
0003EE 0E0C               M     movlw   B'1100'
0003F0 5C30               M     subwf   DisplayMode, 0              ; check if Var-Value=0
0003F2 B4D8               M     btfsc   STATUS, 2
0003F4 EF?? F???          M     goto    EnterFour
                      00383         ifequalb    DisplayMode, B'1101', EnterFive
0003F8 0E0D               M     movlw   B'1101'
0003FA 5C30               M     subwf   DisplayMode, 0              ; check if Var-Value=0
0003FC B4D8               M     btfsc   STATUS, 2
0003FE EF?? F???          M     goto    EnterFive
000402 0012           00384         return
Warning[207]: Found label after column 1. (EndIfEnter)
000404                00385         EndIfEnter
000404 8033           00386         bsf         ButtonPushed, 0
000406 0012           00387         return
                      00388         
000408                00389 EnterOne
                      00390     store   DisplayMode, B'10'
000408 0E02               M     movlw   B'10'
00040A 6E30               M     movwf   DisplayMode
00040C D???           00391     bra     EndIfEnter
                      00392 
00040E                00393 EnterTwo
                      00394     store   DisplayMode, B'1011'
00040E 0E0B               M     movlw   B'1011'
000410 6E30               M     movwf   DisplayMode
000412 D???           00395     bra     EndIfEnter
                      00396     
000414                00397 EnterThree
000414 D???           00398     bra     EndIfEnter
                      00399     
000416                00400 EnterFour
000416 D???           00401     bra     EndIfEnter
                      00402     
000418                00403 EnterFive
000418 D???           00404     bra     EndIfEnter
                      00405     
                      00406 
                      00407     
                      00408     
                      00409     
                      00410     
                      00411     
                      00412 ; ********************************************************************************
                      00413 ; LCD Functions 
                      00414 ; ********************************************************************************
                      00415 
                      00416 ; InitializeLCD: set configuration for the LCD Display
                      00417 ; Input: None                       Output: None
00041A                00418 InitializeLCD
00041A EC?? F???      00419     call        Delay5ms
00041E EC?? F???      00420     call        Delay5ms
000422 0E33           00421     movlw       B'00110011'         ; set for 8 bit twice
000424 EC?? F???      00422     call        WriteInstToLCD
000428 0E33           00423     movlw       B'00110011'         ; set for 8 bit
00042A EC?? F???      00424     call        WriteInstToLCD
00042E 0E33           00425     movlw       B'00110011'         ; set for 8 bit once again, then 4 bit
000430 EC?? F???      00426     call        WriteInstToLCD
000434 0E28           00427     movlw       B'00101000'         ; 4 bits, 2 lines, 5x8
000436 EC?? F???      00428     call        WriteInstToLCD
00043A 0E0C           00429     movlw       B'00001100'         ; display on/off
00043C EC?? F???      00430     call        WriteInstToLCD
000440 0E06           00431     movlw       B'00000110'         ; entry mode
000442 EC?? F???      00432     call        WriteInstToLCD
000446 0E01           00433     movlw       B'00000001'         ; clear ram
000448 EC?? F???      00434     call        WriteInstToLCD
MPASM 5.65                          MAIN.ASM   2-2-2016  21:05:23         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00044C 0012           00435     return
                      00436     
                      00437     
                      00438 ; WriteInstToLCD: sequences of command to modify the config of LCD
                      00439 ; Input: W                         Output: None
00044E                00440 WriteInstToLCD
00044E 9483           00441     bcf     LCD_RS                  ; clear RS to enter instruction mode
000450 6E20           00442     movwf   Temp0                   ; store into Temporary register
000452 EC?? F???      00443     call    MoveMSB
000456 8683           00444     bsf     LCD_E                   ; pulse LCD high
000458 0000           00445     nop
00045A 9683           00446     bcf     LCD_E                   ; pulse LCD low
00045C 3820           00447     swapf   Temp0, W                ; swap nibbles
00045E EC?? F???      00448     call    MoveMSB
000462 8683           00449     bsf     LCD_E                   ; pulse LCD high
000464 0000           00450     nop                             ; wait
000466 9683           00451     bcf     LCD_E                   ; pulse LCD low
000468 EC?? F???      00452     call    Delay5ms
00046C 0012           00453     return
                      00454     
                      00455 ; WriteDataToLCD: sequences of command to display a character on LCD
                      00456 ; Input: W                          Output: None
00046E                00457 WriteDataToLCD
00046E 8483           00458     bsf     LCD_RS                  ; set RS for data mode
000470 6E20           00459     movwf   Temp0                   ; store into temporary register
000472 EC?? F???      00460     call    MoveMSB
000476 8683           00461     bsf     LCD_E                   ; pulse LCD high
000478 0000           00462     nop
00047A 9683           00463     bcf     LCD_E                   ; pulse LCD low
00047C 3820           00464     swapf   Temp0, W                ; swap nibbles
00047E EC?? F???      00465     call    MoveMSB
000482 8683           00466     bsf     LCD_E                   ; pulse LCD high
000484 0000           00467     nop                             ; wait
000486 9683           00468     bcf     LCD_E                   ; pulse LCD low
000488 EC?? F???      00469     call    Delay44us
00048C 0012           00470     return
                      00471     
                      00472 ; Write16DataToLCD: Take 16 Character from the table, and display them one by
                      00473 ;                   one, by invoking the subroutine WriteDataToLCD for 16 times
                      00474 ; Input: tblrd (Table Pointer)      Output: None
00048E                00475 Write16DataToLCD
00048E 0008           00476     tblrd*                          ; read first character in table
000490 50F5           00477     movf    TABLAT, W
Warning[207]: Found label after column 1. (Loop16LCD)
000492                00478     Loop16LCD
000492 EC?? F???      00479         call    WriteDataToLCD
000496 000B           00480         tblrd+*                     ; increment pointer then read
000498 50F5           00481         movf    TABLAT, W
00049A E1??           00482         bnz     Loop16LCD
00049C 0012           00483     return
                      00484     
                      00485 ; MoveMSB: Move the upper 4 bits of W into PORTD without affecting current
                      00486 ;          values in it
                      00487 ; Input: W                       Output: None
00049E                00488 MoveMSB
00049E CF83 F021      00489     movff   PORTD, Temp1
0004A2 0BF0           00490     andlw   0xF0
0004A4 1221           00491     iorwf   Temp1,F                 ; OR operation and store it in File Reg
0004A6 090F           00492     iorlw   0x0F
0004A8 1621           00493     andwf   Temp1,F                 ; AND operation and store it in File Reg
0004AA C021 FF83      00494     movff   Temp1, PORTD
0004AE 0012           00495     return
                      00496 
                      00497 ; ClearLCD: Clear the entire LCD
                      00498 ; Input: None                   Output: None
0004B0                00499 ClearLCD
0004B0 0EC0           00500     movlw   B'11000000'             ; 2nd line
0004B2 EC?? F???      00501     call    WriteInstToLCD
0004B6 0E01           00502     movlw   B'00000001'             ; clear 2nd line
0004B8 EC?? F???      00503     call    WriteInstToLCD
0004BC 0E80           00504     movlw   B'10000000'             ; 1st line
0004BE EC?? F???      00505     call    WriteInstToLCD
0004C2 0E01           00506     movlw   B'00000001'             ; clear 1st line
0004C4 EC?? F???      00507     call    WriteInstToLCD
MPASM 5.65                          MAIN.ASM   2-2-2016  21:05:23         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004C8 0012           00508     return
                      00509     
0004CA                00510 Delay5ms
                      00511     store   DelayCounter1, d'110'
0004CA 0E6E               M     movlw   d'110'
0004CC 6E26               M     movwf   DelayCounter1
Warning[207]: Found label after column 1. (Delay5msLoop)
0004CE                00512     Delay5msLoop
0004CE EC?? F???      00513         call    Delay44us
0004D2 2E26           00514         decfsz  DelayCounter1, 1
0004D4 D???           00515         bra     Delay5msLoop
0004D6 0012           00516     return
                      00517     
0004D8                00518 Delay44us
                      00519     store   DelayCounter0, 0x23
0004D8 0E23               M     movlw   0x23
0004DA 6E25               M     movwf   DelayCounter0
Warning[207]: Found label after column 1. (Delay44usLoop)
0004DC                00520     Delay44usLoop
0004DC 2E25           00521         decfsz  DelayCounter0, 1
0004DE D???           00522         bra     Delay44usLoop
0004E0 0012           00523     return
                      00524     
0004E2                00525 Interrupt
0004E2 D???           00526     bra     Interrupt
                      00527     
0004E4                00528 PowerOff    
                      00529     end

Errors   :     0
Warnings :    11 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

